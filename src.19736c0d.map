{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/assemblyscript/lib/loader/index.js","../../src/shared/CanvasPatternRepetition.ts","../../src/shared/FillRule.ts","../../src/shared/ImageSmoothingQuality.ts","../../src/shared/GlobalCompositeOperationValue.ts","../../src/shared/CanvasDirection.ts","../../src/shared/TextAlign.ts","../../src/shared/TextBaseline.ts","../../src/shared/LineCap.ts","../../src/shared/LineJoin.ts","../../src/glue/AS2DGlue.ts","../../src/shared/GlobalCompositeOperation.ts","../src/index.ts","index.ts","index.js"],"names":["window","frame","requestAnimationFrame","wasm","update","Buffer","require"],"mappings":";AAAA,aAEA,QAAA,WAAA,EACA,QAAA,YAAA,EACA,QAAA,cAAA,EAOA,IALA,IAAA,EAAA,GACA,EAAA,GACA,EAAA,oBAAA,WAAA,WAAA,MAEA,EAAA,mEACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,WAAA,IAAA,EAQA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAEA,GAAA,EAAA,EAAA,EACA,MAAA,IAAA,MAAA,kDAKA,IAAA,EAAA,EAAA,QAAA,KAOA,OANA,IAAA,IAAA,EAAA,GAMA,CAAA,EAJA,IAAA,EACA,EACA,EAAA,EAAA,GAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,GAeA,IAdA,IAAA,EACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAGA,EAAA,EAAA,EACA,EAAA,EACA,EAEA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,IACA,EAAA,KAAA,GAAA,GAAA,IACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAmBA,OAhBA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,IAAA,GAGA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,GAGA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GACA,EAAA,IAAA,GAAA,WACA,EAAA,EAAA,IAAA,EAAA,QACA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,IAEA,OAAA,EAAA,KAAA,IAGA,SAAA,EAAA,GAQA,IAPA,IAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,EAAA,GAIA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAHA,MAIA,EAAA,KAAA,EACA,EAAA,EAAA,EALA,MAKA,EAAA,EAAA,EALA,QA2BA,OAjBA,IAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,IACA,OAEA,IAAA,IACA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IACA,MAIA,EAAA,KAAA,IAnIA,EAAA,IAAA,WAAA,IAAA,GACA,EAAA,IAAA,WAAA,IAAA;;ACnBA,QAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAOA,IALA,GAAA,EAEA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAKA,IAHA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,MACA,CAAA,GAAA,IAAA,EACA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAEA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,EAEA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAGA,QAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAmCA,IAjCA,EAAA,KAAA,IAAA,GAEA,MAAA,IAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,EAAA,EACA,EAAA,IAEA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,IACA,IACA,GAAA,IAGA,GADA,EAAA,GAAA,EACA,EAAA,EAEA,EAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAAA,IACA,IACA,GAAA,GAGA,EAAA,GAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,IAEA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,EAAA,IAIA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAIA,IAFA,EAAA,GAAA,EAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAEA,EAAA,EAAA,EAAA,IAAA,IAAA;;AClFA,IAAA,EAAA,GAAA,SAEA,OAAA,QAAA,MAAA,SAAA,SAAA,GACA,MAAA,kBAAA,EAAA,KAAA;;;;AC0vDA,IAAA,EAAA,UAAA,GAnvDA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,QAAA,WAuCA,SAAA,IACA,IACA,IAAA,EAAA,IAAA,WAAA,GAEA,OADA,EAAA,UAAA,CAAA,UAAA,WAAA,UAAA,IAAA,WAAA,OAAA,KACA,KAAA,EAAA,OACA,mBAAA,EAAA,UACA,IAAA,EAAA,SAAA,EAAA,GAAA,WACA,MAAA,GACA,OAAA,GAIA,SAAA,IACA,OAAA,EAAA,oBACA,WACA,WAGA,SAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,WAAA,8BAcA,OAZA,EAAA,qBAEA,EAAA,IAAA,WAAA,IACA,UAAA,EAAA,WAGA,OAAA,IACA,EAAA,IAAA,EAAA,IAEA,EAAA,OAAA,GAGA,EAaA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,EAAA,qBAAA,gBAAA,GACA,OAAA,IAAA,EAAA,EAAA,EAAA,GAIA,GAAA,iBAAA,EAAA,CACA,GAAA,iBAAA,EACA,MAAA,IAAA,MACA,qEAGA,OAAA,EAAA,KAAA,GAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,yCAGA,MAAA,oBAAA,aAAA,aAAA,YACA,EAAA,EAAA,EAAA,EAAA,GAGA,iBAAA,EACA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,GA4BA,SAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,oCACA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,wCAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OADA,EAAA,GACA,GAAA,EACA,EAAA,EAAA,QAEA,IAAA,EAIA,iBAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,GACA,EAAA,EAAA,GAAA,KAAA,GAEA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,GAGA,GAFA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KACA,EAAA,oBACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAGA,OAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GAKA,GAJA,iBAAA,GAAA,KAAA,IACA,EAAA,SAGA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,8CAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,EAAA,EAAA,IAEA,MAAA,EAAA,GASA,OAPA,IAAA,IAIA,EAAA,EAAA,MAAA,EAAA,IAGA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,IAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,WAEA,EAAA,GAAA,EAAA,WAAA,EACA,MAAA,IAAA,WAAA,6BAGA,GAAA,EAAA,WAAA,GAAA,GAAA,GACA,MAAA,IAAA,WAAA,6BAmBA,OAfA,OADA,IAAA,QAAA,IAAA,EACA,IAAA,WAAA,QACA,IAAA,EACA,IAAA,WAAA,EAAA,GAEA,IAAA,WAAA,EAAA,EAAA,GAGA,EAAA,qBAEA,EAAA,GACA,UAAA,EAAA,UAGA,EAAA,EAAA,EAAA,GAEA,EAGA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,QAGA,OAAA,KAFA,EAAA,EAAA,EAAA,IAEA,OACA,GAGA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,GAGA,GAAA,EAAA,CACA,GAAA,oBAAA,aACA,EAAA,kBAAA,aAAA,WAAA,EACA,MAAA,iBAAA,EAAA,QAAA,EAAA,EAAA,QACA,EAAA,EAAA,GAEA,EAAA,EAAA,GAGA,GAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MACA,OAAA,EAAA,EAAA,EAAA,MAIA,MAAA,IAAA,UAAA,sFAGA,SAAA,EAAA,GAGA,GAAA,GAAA,IACA,MAAA,IAAA,WAAA,0DACA,IAAA,SAAA,IAAA,UAEA,OAAA,EAAA,EAGA,SAAA,EAAA,GAIA,OAHA,GAAA,IACA,EAAA,GAEA,EAAA,OAAA,GA+EA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GACA,OAAA,EAAA,OAEA,GAAA,oBAAA,aAAA,mBAAA,YAAA,SACA,YAAA,OAAA,IAAA,aAAA,aACA,OAAA,EAAA,WAEA,iBAAA,IACA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,OAAA,EAIA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA,EACA,IAAA,OACA,IAAA,QACA,UAAA,EACA,OAAA,EAAA,GAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,EACA,IAAA,MACA,OAAA,IAAA,EACA,IAAA,SACA,OAAA,EAAA,GAAA,OACA,QACA,GAAA,EAAA,OAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAcA,SALA,IAAA,GAAA,EAAA,KACA,EAAA,GAIA,EAAA,KAAA,OACA,MAAA,GAOA,SAJA,IAAA,GAAA,EAAA,KAAA,UACA,EAAA,KAAA,QAGA,GAAA,EACA,MAAA,GAOA,IAHA,KAAA,KACA,KAAA,GAGA,MAAA,GAKA,IAFA,IAAA,EAAA,UAGA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,EAAA,IAAA,cACA,GAAA,GASA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAmIA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,EAAA,OAAA,OAAA,EAmBA,GAhBA,iBAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,WACA,EAAA,WACA,GAAA,aACA,GAAA,YAEA,GAAA,EACA,MAAA,KAEA,EAAA,EAAA,EAAA,EAAA,OAAA,GAIA,EAAA,IAAA,EAAA,EAAA,OAAA,GACA,GAAA,EAAA,OAAA,CACA,GAAA,EAAA,OAAA,EACA,EAAA,EAAA,OAAA,OACA,GAAA,EAAA,EAAA,CACA,IAAA,EACA,OAAA,EADA,EAAA,EAUA,GALA,iBAAA,IACA,EAAA,EAAA,KAAA,EAAA,IAIA,EAAA,SAAA,GAEA,OAAA,IAAA,EAAA,QACA,EAEA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAEA,OADA,GAAA,IACA,EAAA,qBACA,mBAAA,WAAA,UAAA,QACA,EACA,WAAA,UAAA,QAAA,KAAA,EAAA,EAAA,GAEA,WAAA,UAAA,YAAA,KAAA,EAAA,EAAA,GAGA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAGA,MAAA,IAAA,UAAA,wCAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IA0BA,EA1BA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,QAAA,IAAA,IAEA,UADA,EAAA,OAAA,GAAA,gBACA,UAAA,GACA,YAAA,GAAA,aAAA,GAAA,CACA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,EACA,OAAA,EAEA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAIA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,EAAA,GAEA,EAAA,aAAA,EAAA,GAKA,GAAA,EAAA,CACA,IAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAEA,IADA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAEA,IAAA,IAAA,GAAA,EAAA,GACA,GAAA,OAKA,IADA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,IAAA,CAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CACA,GAAA,EACA,MAGA,GAAA,EAAA,OAAA,EAIA,OAAA,EAeA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,OAAA,IAAA,EACA,IAAA,EAAA,EAAA,OAAA,EACA,GAGA,EAAA,OAAA,IACA,IACA,EAAA,GAJA,EAAA,EASA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,UAAA,sBAEA,EAAA,EAAA,IACA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CACA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IACA,GAAA,MAAA,GAAA,OAAA,EACA,EAAA,EAAA,GAAA,EAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAkFA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,IAAA,EAAA,OACA,EAAA,cAAA,GAEA,EAAA,cAAA,EAAA,MAAA,EAAA,IAIA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAIA,IAHA,IAAA,EAAA,GAEA,EAAA,EACA,EAAA,GAAA,CACA,IAQA,EAAA,EAAA,EAAA,EARA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAEA,GAAA,EAAA,GAAA,EAGA,OAAA,GACA,KAAA,EACA,EAAA,MACA,EAAA,GAEA,MACA,KAAA,EAEA,MAAA,KADA,EAAA,EAAA,EAAA,OAEA,GAAA,GAAA,IAAA,EAAA,GAAA,GACA,MACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,OAAA,EAAA,SACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,UACA,EAAA,GAMA,OAAA,GAGA,EAAA,MACA,EAAA,GACA,EAAA,QAEA,GAAA,MACA,EAAA,KAAA,IAAA,GAAA,KAAA,OACA,EAAA,MAAA,KAAA,GAGA,EAAA,KAAA,GACA,GAAA,EAGA,OAAA,EAAA,GA98BA,QAAA,OAAA,EACA,QAAA,WAAA,EACA,QAAA,kBAAA,GA0BA,EAAA,yBAAA,IAAA,EAAA,oBACA,EAAA,oBACA,IAKA,QAAA,WAAA,IAkEA,EAAA,SAAA,KAGA,EAAA,SAAA,SAAA,GAEA,OADA,EAAA,UAAA,EAAA,UACA,GA2BA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAGA,EAAA,sBACA,EAAA,UAAA,UAAA,WAAA,UACA,EAAA,UAAA,WACA,oBAAA,QAAA,OAAA,SACA,EAAA,OAAA,WAAA,GAEA,OAAA,eAAA,EAAA,OAAA,QAAA,CACA,MAAA,KACA,cAAA,KAiCA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAiBA,EAAA,YAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAKA,EAAA,gBAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAiHA,EAAA,SAAA,SAAA,GACA,QAAA,MAAA,IAAA,EAAA,YAGA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAGA,GAAA,IAAA,EAAA,OAAA,EAKA,IAHA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GAGA,EAAA,WAAA,SAAA,GACA,OAAA,OAAA,GAAA,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIA,EAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,GACA,MAAA,IAAA,UAAA,+CAGA,GAAA,IAAA,EAAA,OACA,OAAA,EAAA,MAAA,GAGA,IAAA,EACA,QAAA,IAAA,EAEA,IADA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,GAAA,EAAA,GAAA,OAIA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,+CAEA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,OAEA,OAAA,GA8CA,EAAA,WAAA,EA0EA,EAAA,UAAA,WAAA,EAQA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,SAAA,WACA,IAAA,EAAA,EAAA,KAAA,OACA,OAAA,IAAA,EAAA,GACA,IAAA,UAAA,OAAA,EAAA,KAAA,EAAA,GACA,EAAA,MAAA,KAAA,YAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BACA,OAAA,OAAA,GACA,IAAA,EAAA,QAAA,KAAA,IAGA,EAAA,UAAA,QAAA,WACA,IAAA,EAAA,GACA,EAAA,QAAA,kBAKA,OAJA,KAAA,OAAA,IACA,EAAA,KAAA,SAAA,MAAA,EAAA,GAAA,MAAA,SAAA,KAAA,KACA,KAAA,OAAA,IAAA,GAAA,UAEA,WAAA,EAAA,KAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAgBA,QAbA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,EAAA,EAAA,OAAA,QAEA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,KAAA,QAGA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAQA,GAAA,OAAA,EAAA,OAAA,EASA,IAPA,IAAA,GAJA,KAAA,IADA,KAAA,GAMA,GAPA,KAAA,IADA,KAAA,GASA,EAAA,KAAA,IAAA,EAAA,GAEA,EAAA,KAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GA6HA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,KAAA,QAAA,EAAA,EAAA,IAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAkDA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAEA,QAAA,IAAA,EACA,EAAA,OACA,EAAA,KAAA,OACA,EAAA,OAEA,QAAA,IAAA,GAAA,iBAAA,EACA,EAAA,EACA,EAAA,KAAA,OACA,EAAA,MAEA,CAAA,IAAA,SAAA,GAWA,MAAA,IAAA,MACA,2EAXA,GAAA,EACA,SAAA,IACA,GAAA,OACA,IAAA,IAAA,EAAA,UAEA,EAAA,EACA,OAAA,GASA,IAAA,EAAA,KAAA,OAAA,EAGA,SAFA,IAAA,GAAA,EAAA,KAAA,EAAA,GAEA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,0CAGA,IAAA,EAAA,QAGA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,GAAA,GAAA,cACA,GAAA,IAKA,EAAA,UAAA,OAAA,WACA,MAAA,CACA,KAAA,SACA,KAAA,MAAA,UAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAwFA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,OAAA,OAAA,aAAA,MAAA,OAAA,GAMA,IAFA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,GACA,GAAA,OAAA,aAAA,MACA,OACA,EAAA,MAAA,EAAA,GAAA,IAGA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,IAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAEA,GAAA,EAAA,KAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,GAAA,OAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EA0CA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,WAAA,yCA+JA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CACA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,qCACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAkDA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,MAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,EAAA,GA8BA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAmJA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,uBAAA,uBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAWA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,wBAAA,wBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EA/cA,EAAA,UAAA,MAAA,SAAA,EAAA,GACA,IAoBA,EApBA,EAAA,KAAA,OAqBA,IApBA,IAAA,GAGA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IANA,OAAA,IAAA,EAAA,IAAA,GASA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,GAGA,EAAA,IAAA,EAAA,GAGA,EAAA,qBACA,EAAA,KAAA,SAAA,EAAA,IACA,UAAA,EAAA,cACA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,KAAA,EAAA,GAIA,OAAA,GAWA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GACA,EAAA,EAAA,EAAA,KAAA,QAKA,IAFA,IAAA,EAAA,KAAA,IAAA,GACA,EAAA,EACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,GAAA,KAAA,EAAA,IAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAAA,EAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,SAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,IACA,SAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,SAAA,KAAA,IACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,KAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,GACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,SAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,KAAA,IACA,GAAA,IAAA,KAAA,GAAA,GADA,KAAA,IAIA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,IAAA,GACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IASA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAMA,OALA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,KAAA,GAAA,IAAA,EACA,EAAA,GAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAUA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAOA,OANA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,EAAA,IAAA,EAAA,IAAA,EAAA,GACA,KAAA,GAAA,IAAA,EACA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,IAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAaA,OAZA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAgBA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAQA,GAPA,IAAA,EAAA,GACA,GAAA,IAAA,IAAA,EAAA,KAAA,QACA,GAAA,EAAA,SAAA,EAAA,EAAA,QACA,IAAA,EAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAGA,IAAA,EAAA,OAAA,EACA,GAAA,IAAA,EAAA,QAAA,IAAA,KAAA,OAAA,OAAA,EAGA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,6BAEA,GAAA,EAAA,GAAA,GAAA,KAAA,OAAA,MAAA,IAAA,WAAA,6BACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,2BAGA,EAAA,KAAA,SAAA,EAAA,KAAA,QACA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,OAAA,EAAA,GAGA,IACA,EADA,EAAA,EAAA,EAGA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAEA,GAAA,EAAA,MAAA,EAAA,oBAEA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAGA,WAAA,UAAA,IAAA,KACA,EACA,KAAA,SAAA,EAAA,EAAA,GACA,GAIA,OAAA,GAOA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,iBAAA,EAAA,CASA,GARA,iBAAA,GACA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,QACA,iBAAA,IACA,EAAA,EACA,EAAA,KAAA,QAEA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,MACA,EAAA,GAGA,QAAA,IAAA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,GAAA,iBAAA,IAAA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,qBAAA,OAEA,iBAAA,IACA,GAAA,KAIA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,EACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,EACA,OAAA,KAQA,IAAA,EACA,GANA,KAAA,EACA,OAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAEA,IAAA,EAAA,GAGA,iBAAA,EACA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,GAAA,MAEA,CACA,IAAA,EAAA,EAAA,SAAA,GACA,EACA,EAAA,IAAA,EAAA,EAAA,GAAA,YACA,EAAA,EAAA,OACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,GAAA,EAAA,EAAA,GAIA,OAAA,MAMA,IAAA,EAAA,qBAEA,SAAA,EAAA,GAIA,IAFA,EAAA,EAAA,GAAA,QAAA,EAAA,KAEA,OAAA,EAAA,MAAA,GAEA,KAAA,EAAA,OAAA,GAAA,GACA,GAAA,IAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,OACA,EAAA,QAAA,aAAA,IAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IACA,EAAA,SAAA,IAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EADA,EAAA,GAAA,EAAA,EAMA,IAJA,IAAA,EAAA,EAAA,OACA,EAAA,KACA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EAAA,CAIA,IAHA,EAAA,EAAA,WAAA,IAGA,OAAA,EAAA,MAAA,CAEA,IAAA,EAAA,CAEA,GAAA,EAAA,MAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SACA,GAAA,EAAA,IAAA,EAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SAIA,EAAA,EAEA,SAIA,GAAA,EAAA,MAAA,EACA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,EAAA,EACA,SAIA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,YACA,IAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAMA,GAHA,EAAA,KAGA,EAAA,IAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KAAA,QACA,GAAA,EAAA,KAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,EAAA,IACA,GAAA,EAAA,UAEA,GAAA,EAAA,MAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,SAEA,CAAA,KAAA,EAAA,SASA,MAAA,IAAA,MAAA,sBARA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,MAOA,OAAA,EAGA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAEA,EAAA,KAAA,IAAA,EAAA,WAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WACA,GAAA,GAAA,KADA,EAIA,GADA,EAAA,EAAA,WAAA,KACA,EACA,EAAA,EAAA,IACA,EAAA,KAAA,GACA,EAAA,KAAA,GAGA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,YAAA,EAAA,IAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,UADA,EAEA,EAAA,EAAA,GAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,GAAA;;AC3vDA,aAEA,MAAA,EAAA,oBAAA,eACA,EAAA,SAGA,SAAA,EAAA,EAAA,EAAA,GACA,IACA,EAAA,EAAA,IAAA,EACA,EAFA,EAAA,IAAA,GAGA,EAAA,GAEA,KAAA,EADA,MACA,CACA,IAAA,EAAA,EAAA,EAFA,KAEA,GACA,EAAA,GAAA,OAAA,EAAA,MAAA,KAHA,KAIA,EAAA,EAAA,SAAA,EAAA,GAAA,GACA,EAAA,KAAA,OAAA,aAAA,MAAA,OAAA,IACA,GAAA,EAEA,OAAA,EAAA,KAAA,IAAA,OAAA,aAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,GACA,IAAA,EAAA,GAEA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,MAAA,gBACA,IAAA,EAAA,EAAA,OACA,OAAA,EAAA,IAAA,YAAA,GAAA,IAAA,YAAA,GAAA,GAIA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,GAYA,OAXA,EAAA,MAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAAA,EAAA,OACA,MAAA,MAAA,UAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,IAEA,EAAA,MAAA,EAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAAA,EAAA,OACA,QAAA,IAAA,UAAA,EAAA,EAAA,IAAA,EAAA,IAAA,IAAA,MAAA,UAAA,MAAA,KAAA,UAAA,EAAA,EAAA,GAAA,KAAA,QAEA,EAAA,KAAA,EAAA,MAAA,KACA,EAAA,KAAA,EAAA,MAAA,KAEA,EAIA,SAAA,EAAA,EAAA,GACA,IASA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EATA,EAAA,EAAA,QACA,EAAA,EAAA,OACA,EAAA,EAAA,mBACA,EAAA,EAAA,eACA,EAAA,EAAA,eACA,EAAA,EAAA,MACA,EAAA,EAAA,UAAA,aAMA,SAAA,IAEA,IAAA,EAAA,SACA,EAAA,EAAA,OACA,EAAA,IAAA,UAAA,GACA,EAAA,IAAA,WAAA,GACA,EAAA,IAAA,WAAA,GACA,EAAA,IAAA,YAAA,GACA,EAAA,IAAA,WAAA,GACA,EAAA,IAAA,YAAA,GACA,IACA,EAAA,IAAA,cAAA,GACA,EAAA,IAAA,eAAA,IAEA,EAAA,IAAA,aAAA,GACA,EAAA,IAAA,aAAA,IAkHA,OA/GA,IAaA,EAAA,UAVA,SAAA,GACA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,GAAA,GAAA,IACA,EAAA,EAAA,IAAA,EACA,IACA,EAAA,IAAA,GAAA,EACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,WAAA,GACA,OAAA,GAWA,EAAA,UALA,SAAA,GAEA,OADA,IACA,EAAA,EAAA,EAAA,IA0CA,EAAA,SA/BA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,YACA,IAAA,UACA,EAAA,EACA,EAAA,WAEA,IAAA,IAAA,EAAA,EAAA,QAEA,IAAA,EAAA,EAAA,kBACA,IAAA,EAAA,MAAA,MAAA,qBACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,IACA,EAAA,EAlBA,SAAA,GAEA,OAAA,GAAA,GAAA,KAAA,MAAA,EADA,EACA,GAgBA,CAAA,IAOA,GANA,IACA,EAAA,IAAA,GAAA,EACA,EAAA,EAAA,IAAA,GAAA,EACA,EAAA,EAAA,IAAA,GAAA,EACA,EAAA,IAAA,GAAA,EACA,EAAA,EAAA,IAAA,GAAA,EACA,GAEA,GADA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,EAAA,OAAA,IAAA,EAAA,CACA,IAAA,EAAA,EAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAEA,GACA,EAAA,EAAA,EAAA,EAAA,GAEA,OAAA,GAgBA,EAAA,SAVA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,kBACA,IAAA,EAAA,MAAA,MAAA,qBACA,IACA,IAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,EAAA,IAAA,GACA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAaA,EAAA,UAPA,SAAA,GACA,IACA,IAAA,EAAA,EAAA,IAAA,GACA,EAAA,GACA,EAAA,IAiBA,EAAA,YARA,SAAA,GACA,mBAAA,EAAA,WAAA,EAAA,EAAA,UACA,IAAA,EAAA,EAAA,OAGA,OAFA,EAAA,KAAA,GACA,EAAA,IAAA,EAAA,GACA,GAUA,EAAA,YAJA,SAAA,GACA,OAAA,EAAA,EAAA,IAAA,GAAA,IAMA,EAAA,OAAA,EAAA,QAAA,EACA,EAAA,MAAA,EAAA,OAAA,EAGA,EAAA,EAAA,OAAA,iBAAA,EAAA,CACA,GAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,GAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,IACA,IAAA,CAAA,IAAA,WAAA,OAAA,IAAA,OAKA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,KACA,EAAA,EAAA,QACA,KAAA,IAKA,OADA,EAAA,SAAA,EACA,EAIA,SAAA,EAAA,EAAA,GACA,OAAA,EACA,EAAA,IAAA,EAAA,KACA,IAAA,YAAA,SAAA,EAAA,IAOA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,IAAA,YAAA,OAAA,GAAA,GAMA,eAAA,EAAA,EAAA,GACA,OAAA,EACA,EAAA,IAAA,EAAA,YACA,YAAA,qBAAA,EAAA,IAAA,UAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,OAAA,GAAA,GACA,EAAA,EAAA,UAAA,aACA,SAAA,EAAA,EAAA,GACA,OAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAEA,IAAA,IAAA,KAAA,EAAA,CACA,IAAA,EAAA,EAAA,GAAA,SACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,MAAA,KACA,EAAA,EACA,KAAA,EAAA,OAAA,GAAA,CACA,IAAA,EAAA,EAAA,QACA,EAAA,EAAA,KAAA,EAAA,GAAA,IACA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,QAAA,KACA,GAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,UAAA,EAAA,GACA,EAAA,EAAA,GACA,QAAA,IAAA,IAAA,EAAA,UAAA,CACA,IAAA,EAAA,YAAA,GACA,OAAA,EAAA,KAAA,EAAA,UAAA,YAAA,KAAA,KAEA,EAAA,UAAA,GACA,EAAA,KAAA,SAAA,GACA,OAAA,OAAA,OAAA,EAAA,UAAA,CAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,MAEA,GAAA,OAAA,oBAAA,GAAA,QAAA,GACA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,KAEA,EAAA,GAAA,EAIA,GAFA,EAAA,EAAA,UAAA,EAAA,GACA,EAAA,EAAA,GAAA,UACA,cAAA,KAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,IAAA,CACA,IAAA,EAAA,EAAA,EAAA,QAAA,OAAA,SACA,EAAA,EAAA,EAAA,QAAA,OAAA,SACA,OAAA,eAAA,EAAA,EAAA,CACA,IAAA,WAAA,OAAA,EAAA,KAAA,KACA,IAAA,SAAA,GAAA,EAAA,KAAA,GAAA,IACA,YAAA,SAIA,gBAAA,EACA,EAAA,GAAA,EAAA,EAAA,GAEA,OAAA,eAAA,EAAA,EAAA,CACA,MAAA,YAAA,GAEA,OADA,EAAA,EAAA,QACA,EAAA,KAAA,MAAA,UAMA,cAAA,KAAA,GACA,EAAA,EAAA,EAAA,EAAA,UAAA,KACA,OAAA,eAAA,EAAA,EAAA,CACA,IAAA,EAAA,EAAA,QAAA,OAAA,SACA,IAAA,EAAA,EAAA,QAAA,OAAA,SACA,YAAA,IAIA,EAAA,GADA,mBAAA,EACA,EAAA,EAAA,GAEA,EAKA,OAAA,EA/FA,QAAA,YAAA,EAOA,QAAA,kBAAA,EAUA,QAAA,qBAAA,EAiFA,QAAA,SAAA;;aChUA,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,OAAA,GAAA,SAIA,EAAA,EAAA,SAAA,GAAA,WAIA,EAAA,EAAA,SAAA,GAAA,WAIA,EAAA,EAAA,UAAA,GAAA,YAhBF,CAAY,EAAA,QAAA,0BAAA,QAAA,wBAAuB;;aCHnC,IAAY,yDAAZ,SAAY,GACV,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,QAAA,GAAA,UAFF,CAAY,EAAA,QAAA,WAAA,QAAA,SAAQ;;aCApB,IAAY,yDAAZ,SAAY,GACV,EAAA,EAAA,IAAA,GAAA,MACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,KAAA,GAAA,OAHF,CAAY,EAAA,QAAA,wBAAA,QAAA,sBAAqB;;aCIjC,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,eAAA,GAAA,cAKA,EAAA,EAAA,aAAA,GAAA,YAIA,EAAA,EAAA,cAAA,GAAA,aAIA,EAAA,EAAA,eAAA,GAAA,cAIA,EAAA,EAAA,oBAAA,GAAA,mBAKA,EAAA,EAAA,kBAAA,GAAA,iBAIA,EAAA,EAAA,mBAAA,GAAA,kBAKA,EAAA,EAAA,oBAAA,GAAA,mBAIA,EAAA,EAAA,QAAA,GAAA,UAIA,EAAA,EAAA,KAAA,GAAA,OAIA,EAAA,EAAA,IAAA,IAAA,MAKA,EAAA,EAAA,SAAA,IAAA,WAKA,EAAA,EAAA,OAAA,IAAA,SAKA,EAAA,EAAA,QAAA,IAAA,UAIA,EAAA,EAAA,OAAA,IAAA,SAIA,EAAA,EAAA,QAAA,IAAA,UAIA,EAAA,EAAA,eAAA,IAAA,cAIA,EAAA,EAAA,cAAA,IAAA,aAIA,EAAA,EAAA,cAAA,IAAA,aAIA,EAAA,EAAA,cAAA,IAAA,aAKA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,UAAA,IAAA,YAIA,EAAA,EAAA,IAAA,IAAA,MAIA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,MAAA,IAAA,QAIA,EAAA,EAAA,WAAA,IAAA,aA/GF,CAAY,EAAA,QAAA,gCAAA,QAAA,8BAA6B;;aCAzC,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,IAAA,GAAA,MAIA,EAAA,EAAA,IAAA,GAAA,MAIA,EAAA,EAAA,QAAA,GAAA,UAZF,CAAY,EAAA,QAAA,kBAAA,QAAA,gBAAe;;aCE3B,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,KAAA,GAAA,OAIA,EAAA,EAAA,MAAA,GAAA,QAIA,EAAA,EAAA,OAAA,GAAA,SAIA,EAAA,EAAA,MAAA,GAAA,QAIA,EAAA,EAAA,IAAA,GAAA,MApBF,CAAY,EAAA,QAAA,YAAA,QAAA,UAAS;;aCHrB,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,IAAA,GAAA,MAIA,EAAA,EAAA,QAAA,GAAA,UAIA,EAAA,EAAA,OAAA,GAAA,SAIA,EAAA,EAAA,WAAA,GAAA,aAIA,EAAA,EAAA,YAAA,GAAA,cAIA,EAAA,EAAA,OAAA,GAAA,SAxBF,CAAY,EAAA,QAAA,eAAA,QAAA,aAAY;;aCHxB,IAAY,yDAAZ,SAAY,GACV,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,OAAA,GAAA,SAHF,CAAY,EAAA,QAAA,UAAA,QAAA,QAAO;;aCQnB,IAAY,yDAAZ,SAAY,GAMV,EAAA,EAAA,MAAA,GAAA,QAKA,EAAA,EAAA,MAAA,GAAA,QAMA,EAAA,EAAA,MAAA,GAAA,QAjBF,CAAY,EAAA,QAAA,WAAA,QAAA,SAAQ;;k6CCRpB,IAAA,EAAA,QAAA,6BAEA,EAAA,QAAA,qCAEA,EAAA,QAAA,sBACA,EAAA,QAAA,mCACA,EAAA,QAAA,2CACA,EAAA,QAAA,6BACA,EAAA,QAAA,uBACA,EAAA,QAAA,0BACA,EAAA,QAAA,qBACA,EAAA,QAAA,sBAEA,EAAA,WAAA,SAAA,IACS,KAAA,QAAe,KACf,KAAA,KAAyC,KACxC,KAAA,IAAc,EA6VxB,OA3VS,EAAA,UAAA,kBAAP,SAAyB,EAAa,GAKpC,OAJA,KAAK,QAAU,EACf,KAAK,cACL,KAAK,KAAO,EAAA,kBAAkB,EAAQ,KAAK,SAC3C,KAAK,cACE,KAAK,MAGD,EAAA,UAAA,qBAAb,SAAkC,EAA6B,iGAGjD,OAFZ,KAAK,QAAU,EACf,KAAK,cACL,EAAA,KAAY,CAAA,EAAM,EAAA,qBAAqB,EAAU,KAAK,iBAEtD,OAFA,EAAK,KAAO,EAAA,OACZ,KAAK,cACL,CAAA,EAAO,KAAK,YAGP,EAAA,UAAA,YAAP,SAAmB,EAAa,GAK9B,OAJA,KAAK,QAAU,EACf,KAAK,cACL,KAAK,KAAO,EAAA,YAAY,EAAQ,KAAK,SACrC,KAAK,cACE,KAAK,MAGN,EAAA,UAAA,YAAR,WACE,KAAK,QAAQ,aAAe,CAC1B,aAAc,KAAK,aAAa,KAAK,MACrC,qBAAsB,KAAK,qBAAqB,KAAK,MACrD,cAAe,KAAK,cAAc,KAAK,MACvC,qBAAsB,KAAK,qBAAqB,KAAK,MACrD,sBAAuB,KAAK,sBAAsB,KAAK,MACvD,qBAAsB,KAAK,qBAAqB,KAAK,MACrD,aAAc,KAAK,aAAa,KAAK,MACrC,UAAW,KAAK,UAAU,KAAK,MAC/B,YAAa,KAAK,YAAY,KAAK,MACnC,OAAQ,KAAK,OAAO,KAAK,QAIrB,EAAA,UAAA,YAAR,WACE,KAAK,KAAM,SAAW,GACtB,KAAK,KAAM,UAAY,GACvB,KAAK,KAAM,OAAS,GACpB,KAAK,KAAM,QAAU,GACrB,KAAK,KAAM,SAAW,GACtB,KAAK,KAAM,WAAa,KAAK,WAAW,KAAK,OAGvC,EAAA,UAAA,WAAR,SAAmB,EAAc,GAI/B,OAHA,KAAK,IAAM,EACX,KAAK,KAAM,SAAS,KAAK,IAAM,EAC/B,KAAK,KAAM,cAAc,KAAK,KAAM,UAAU,GAAO,KAAK,IACnD,KAAK,IAGN,EAAA,UAAA,qBAAR,SAA6B,EAAe,EAAY,EAAY,EAAY,GAE9E,GADA,KAAK,IAAM,GACN,KAAK,KAAM,SAAS,GAAQ,MAAM,IAAI,MAAM,uBAAyB,GAE1E,OADA,KAAK,KAAM,UAAU,KAAK,IAAM,KAAK,KAAM,SAAS,GAAO,qBAAqB,EAAI,EAAI,EAAI,GACrF,KAAK,IAGN,EAAA,UAAA,qBAAR,SAA6B,EAAe,EAAY,EAAY,EAAY,EAAY,EAAY,GAEtG,GADA,KAAK,IAAM,GACN,KAAK,KAAM,SAAS,GAAQ,MAAM,IAAI,MAAM,uBAAyB,GAE1E,OADA,KAAK,KAAM,UAAU,KAAK,IAAM,KAAK,KAAM,SAAS,GAAO,qBAAqB,EAAI,EAAI,EAAI,EAAI,EAAI,GAC7F,KAAK,IAGN,EAAA,UAAA,aAAR,SAAqB,EAAe,EAAgB,GAClD,IAAK,KAAK,KAAM,UAAU,GAAQ,MAAM,IAAI,MAAM,yBAA2B,GAC7E,KAAK,KAAM,UAAU,GAAO,aAAa,EAAQ,KAAK,KAAM,UAAU,KAGhE,EAAA,UAAA,UAAR,SAAkB,EAAoB,GAAtC,IAAA,EAAA,KACM,EAAc,KAAK,KAAM,UAAU,GACvC,KAAK,IAAM,EACX,IAAI,EAAiB,KAAK,GAS1B,OARA,KAAK,KAAM,QAAQ,GAAU,MAAM,GAChC,KAAK,SAAA,GAAK,OAAA,EAAE,SACZ,KAAK,mBACL,KAAK,SAAA,GAGJ,OAFA,EAAK,KAAM,eAAe,EAAY,EAAE,MAAO,EAAE,QACjD,EAAK,KAAM,OAAO,GAAU,EACrB,IAEJ,KAAK,IAGN,EAAA,UAAA,cAAR,SAAsB,EAAkB,EAAe,GAErD,GADA,KAAK,IAAM,GACN,KAAK,KAAM,SAAS,GAAW,MAAM,IAAI,MAAM,uBAAyB,GAC7E,IAAK,KAAK,KAAM,OAAO,GAAQ,MAAM,IAAI,MAAM,sBAAwB,GAKvE,OAJA,KAAK,KAAM,SAAS,KAAK,IAAM,KAAK,KAAM,SAAS,GAAU,cAC3D,KAAK,KAAM,OAAO,GAClB,EAAA,wBAAwB,GAAY,QAAQ,IAAK,MAE5C,KAAK,IAGP,EAAA,UAAA,YAAP,SAAmB,EAAkB,GAInC,OADoC,KAAK,KAAM,SAAS,GAC7C,YAAY,KAAK,KAAM,UAAU,IAAO,OAG7C,EAAA,UAAA,OAAR,SAAe,EAAkB,GAC/B,IAAK,KAAK,KAAM,SAAS,GAAW,MAAM,IAAI,MAAM,uBAAyB,GAM7E,IALA,IAAI,EAAgC,KAAK,KACrC,EAAgC,EAAK,SAAS,GAC9C,EAAO,IAAI,aAAa,EAAK,OAAO,OAAQ,EAAS,OACrD,EAAI,EACJ,EAA0C,GACvC,EAAI,OAAkB,IAAP,EAAK,IAAiC,CAC1D,OAAQ,EAAK,IACX,KAAA,EACE,EAAI,IAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAoB,IAAhB,EAAK,EAAI,IAClF,MAEF,KAAA,EACE,EAAI,MAAM,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IACvE,MAEF,KAAA,EACE,EAAI,YACJ,MAEF,KAAA,EACE,EAAI,cAAc,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IAC5F,MAEF,KAAA,EACE,EAAI,OACJ,MAEF,KAAA,EACE,EAAI,YACJ,MAEF,KAAA,EACE,EAAI,UAAU,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IAC9D,MAEF,KAAA,EACE,EAAI,UAAY,EAAA,gBAAgB,EAAK,EAAI,IACzC,MAEF,KAAA,GACE,EAAI,UAAU,EAAK,OAAO,EAAK,EAAI,IAAK,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,KAC5I,MAEF,KAAA,GACE,EAAI,QAAQ,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAoB,IAAhB,EAAK,EAAI,IAChH,MAEF,KAAA,GACE,EAAI,KAAK,EAAA,SAAS,EAAK,EAAI,KAC3B,MAEF,KAAA,GACE,EAAI,UAAY,EAAK,UAAU,EAAK,EAAI,IACxC,MAEF,KAAA,GACE,EAAI,UAAY,EAAK,SAAS,EAAK,EAAI,IACvC,MAEF,KAAA,GACE,EAAI,SAAS,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IAC7D,MAEF,KAAA,GACE,EAAI,UAAY,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACxF,MAEF,KAAA,GACE,EAAI,SACF,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACxE,EAAK,EAAI,GACT,EAAK,EAAI,IAEX,MAEF,KAAA,GACE,EAAI,SACF,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACxE,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,IAEX,MAEF,KAAA,GACE,EAAI,OAAS,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACrF,MAEF,KAAA,GACE,EAAI,KAAO,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACnF,MAEF,KAAA,GACE,EAAI,YAAc,EAAK,EAAI,GAC3B,MAEF,KAAA,GACE,EAAI,yBAA2B,EAAA,8BAA8B,EAAK,EAAI,IACtE,MAEF,KAAA,GACE,EAAI,sBAAwC,IAAhB,EAAK,EAAI,GACrC,MAEF,KAAA,GACE,EAAI,sBAAwB,EAAA,sBAAsB,EAAK,EAAI,IAC3D,MAEF,KAAA,GACE,EAAI,QAAU,EAAA,QAAQ,EAAK,EAAI,IAC/B,MAEF,KAAA,GAEE,EAAI,YAAY,EAAK,SAAS,aAAc,EAAK,EAAI,KACrD,MAEF,KAAA,GACE,EAAI,eAAiB,EAAK,EAAI,GAC9B,MAEF,KAAA,GACE,EAAI,SAAW,EAAA,SAAS,EAAK,EAAI,IACjC,MAEF,KAAA,GACE,EAAI,OAAO,EAAK,EAAI,GAAI,EAAK,EAAI,IACjC,MAEF,KAAA,GACE,EAAI,UAAY,EAAK,EAAI,GACzB,MAEF,KAAA,GACE,EAAI,WAAa,EAAK,EAAI,GAC1B,MAEF,KAAA,GACE,EAAI,OAAO,EAAK,EAAI,GAAI,EAAK,EAAI,IACjC,MAEF,KAAA,GACE,EAAI,iBAAiB,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IACrE,MAEF,KAAA,GACE,EAAI,KAAK,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IACzD,MAEF,KAAA,GACE,EAAI,UACJ,MAEF,KAAA,GACE,EAAI,OACJ,MAEF,KAAA,GACE,EAAI,aAAa,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IAC3F,MAEF,KAAA,GACE,EAAI,WAAa,EAAK,EAAI,GAC1B,MAEF,KAAA,GACE,EAAI,YAAc,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KAC1F,MAEF,KAAA,GACE,EAAI,cAAgB,EAAK,EAAI,GAC7B,MAEF,KAAA,GACE,EAAI,cAAgB,EAAK,EAAI,GAC7B,MAEF,KAAA,GACE,EAAI,SACJ,MAEF,KAAA,GACE,EAAI,YAAc,EAAK,UAAU,EAAK,EAAI,IAC1C,MAEF,KAAA,GACE,EAAI,YAAc,EAAK,SAAS,EAAK,EAAI,IACzC,MAEF,KAAA,GACE,EAAI,WAAW,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,GAAI,EAAK,EAAI,IAC/D,MAEF,KAAA,GACE,EAAI,YAAc,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KAC1F,MAEF,KAAA,GACE,EAAI,WACF,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACxE,EAAK,EAAI,GACT,EAAK,EAAI,IAEX,MAEF,KAAA,GACE,EAAI,WACF,EAAQ,EAAK,EAAI,MAAQ,EAAQ,EAAK,EAAI,IAAM,EAAK,UAAU,EAAK,EAAI,KACxE,EAAK,EAAI,GACT,EAAK,EAAI,GACT,EAAK,EAAI,IAEX,MAEF,KAAA,GACE,EAAI,UAAY,EAAA,UAAU,EAAK,EAAI,IACnC,MAEF,KAAA,GACE,EAAI,aAAe,EAAA,aAAa,EAAK,EAAI,IAI7C,EAAI,EAAK,EAAI,KAIjB,EAAA,UAAA,qBAAA,SAAqB,UACZ,KAAK,KAAM,SAAS,IAG7B,EAAA,UAAA,aAAA,SAAa,UACJ,KAAK,KAAM,OAAO,IAG3B,EAAA,UAAA,sBAAA,SAAsB,UACb,KAAK,KAAM,UAAU,IAEhC,EAhWA,GAAa,QAAA,SAAA;;;;aCTb,IAAY,yDAAZ,SAAY,GAIV,EAAA,EAAA,YAAA,GAAA,cAKA,EAAA,EAAA,UAAA,GAAA,YAIA,EAAA,EAAA,WAAA,GAAA,aAIA,EAAA,EAAA,YAAA,GAAA,cAIA,EAAA,EAAA,iBAAA,GAAA,mBAKA,EAAA,EAAA,eAAA,GAAA,iBAIA,EAAA,EAAA,gBAAA,GAAA,kBAKA,EAAA,EAAA,iBAAA,GAAA,mBAIA,EAAA,EAAA,QAAA,GAAA,UAIA,EAAA,EAAA,KAAA,GAAA,OAIA,EAAA,EAAA,IAAA,IAAA,MAKA,EAAA,EAAA,SAAA,IAAA,WAKA,EAAA,EAAA,OAAA,IAAA,SAKA,EAAA,EAAA,QAAA,IAAA,UAIA,EAAA,EAAA,OAAA,IAAA,SAIA,EAAA,EAAA,QAAA,IAAA,UAIA,EAAA,EAAA,YAAA,IAAA,cAIA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,WAAA,IAAA,aAKA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,UAAA,IAAA,YAIA,EAAA,EAAA,IAAA,IAAA,MAIA,EAAA,EAAA,WAAA,IAAA,aAIA,EAAA,EAAA,MAAA,IAAA,QAIA,EAAA,EAAA,WAAA,IAAA,aA/GF,CAAY,EAAA,QAAA,2BAAA,QAAA,yBAAwB;;8ICFpC,IAAA,EAAA,QAAA,mBAEA,SAAgB,EAAqB,EAAgB,GAEnD,YAFmD,IAAA,IAAA,EAAA,KAC3B,IAAI,EAAA,UAChB,kBAAkB,EAAQ,GAGxC,SAAgB,EAAe,EAAU,GAEvC,YAFuC,IAAA,IAAA,EAAA,KACf,IAAI,EAAA,UAChB,YAAY,EAAK,GAG/B,SAAgB,EAAwB,EAA6B,GAEnE,YAFmE,IAAA,IAAA,EAAA,KAC3C,IAAI,EAAA,UAChB,qBAAqB,EAAU,GAZ7C,QAAA,kBAAA,EAKA,QAAA,YAAA,EAKA,QAAA,qBAAA,EAKA,EAAA,QAAA,oBAEA,EAAA,QAAA,6BACA,EAAA,QAAA,+BACA,EAAA,QAAA,qCACA,EAAA,QAAA,sBACA,EAAA,QAAA,sCACA,EAAA,QAAA,2CACA,EAAA,QAAA,mCACA,EAAA,QAAA,qBACA,EAAA,QAAA,sBACA,EAAA,QAAA,uBACA,EAAA,QAAA;;;;ACcC,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,SAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA7CD,IAAA,EAAA,QAAA,QACM,EAAK,QAAQ,MACb,EAAN,OAAA,m3lBAAA,UAEA,SAAe,IAAa,OAAA,EAAA,UAAA,EAAA,QAAO,WAyClC,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EArCe,OAHR,EAAO,IAAI,KAAK,CAAC,GAAS,CAAE,KAAM,qBAClC,EAAM,IAAI,gBAAgB,GAEhC,EAAA,OAAc,CAAA,EAAM,EAAA,qBAAkC,MAAM,GAAM,KAqCnE,KAAA,EAAA,OArCC,EAAO,KAAO,EAAA,OAqCf,CAAA,QApBD,SAAS,IAED,IAAA,EAAO,OAAO,KACd,EAAS,SAAS,cAAc,UAClC,GACF,EAAO,cAAe,YAAY,GAG9B,IAAA,EAAM,SAAS,cAAc,UAAW,WAAW,MACzD,EAAI,OAAO,MAAQ,IACnB,EAAI,OAAO,OAAS,IACpB,EAAI,OAAO,MAAM,OAAS,kBAC1B,EAAI,OAAO,iBAAiB,YAAa,SAAC,GACpC,IAAA,EAAoB,EAAE,OAA6B,wBACvD,EAAK,UAAU,EAAE,QAAU,EAAK,KAAM,EAAE,QAAU,EAAK,OAGzD,SAAS,KAAK,YAAY,EAAI,QAC9B,EAAK,WAAW,OAAQ,GACxB,EAAK,OA3ByC,mBAArC,YAAY,qBACrB,IAAY,KAAK,IAGjB,OAAO,KAAO,EAAA,kBAA+B,EAAQ,IACrD;;ACtBGA,OAAOC,QACVD,OAAOC,MAAQ,SAASA,IACtBC,sBAAsBD,GAClBD,OAAOG,MACTH,OAAOG,KAAKC,UAGhBF,sBAAsBF,OAAOC,QAG1BD,OAAOK,SAAQL,OAAOK,OAASC,QAAQ,UAAUD,QAEtDC,QAAQ","file":"src.19736c0d.map","sourceRoot":"..\\src","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\r\n\r\nconst hasBigInt64 = typeof BigUint64Array !== \"undefined\";\r\nconst thisPtr = Symbol();\r\n\r\n/** Gets a string from an U32 and an U16 view on a memory. */\r\nfunction getStringImpl(U32, U16, ptr) {\r\n  var dataLength = U32[ptr >>> 2];\r\n  var dataOffset = (ptr + 4) >>> 1;\r\n  var dataRemain = dataLength;\r\n  var parts = [];\r\n  const chunkSize = 1024;\r\n  while (dataRemain > chunkSize) {\r\n    let last = U16[dataOffset + chunkSize - 1];\r\n    let size = last >= 0xD800 && last < 0xDC00 ? chunkSize - 1 : chunkSize;\r\n    let part = U16.subarray(dataOffset, dataOffset += size);\r\n    parts.push(String.fromCharCode.apply(String, part));\r\n    dataRemain -= size;\r\n  }\r\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(dataOffset, dataOffset + dataRemain));\r\n}\r\n\r\n/** Prepares the base module prior to instantiation. */\r\nfunction preInstantiate(imports) {\r\n  var baseModule = {};\r\n\r\n  function getString(memory, ptr) {\r\n    if (!memory) return \"<yet unknown>\";\r\n    var buffer = memory.buffer;\r\n    return getStringImpl(new Uint32Array(buffer), new Uint16Array(buffer), ptr);\r\n  }\r\n\r\n  // add common imports used by stdlib for convenience\r\n  var env = (imports.env = imports.env || {});\r\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\r\n    var memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\r\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\r\n  }\r\n  env.trace = env.trace || function trace(mesg, n) {\r\n    var memory = baseModule.memory || env.memory;\r\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\r\n  }\r\n  imports.Math = imports.Math || Math;\r\n  imports.Date = imports.Date || Date;\r\n\r\n  return baseModule;\r\n}\r\n\r\n/** Prepares the final module once instantiation is complete. */\r\nfunction postInstantiate(baseModule, instance) {\r\n  var rawExports = instance.exports;\r\n  var memory = rawExports.memory;\r\n  var memory_allocate = rawExports[\"memory.allocate\"];\r\n  var memory_fill = rawExports[\"memory.fill\"];\r\n  var memory_free = rawExports[\"memory.free\"];\r\n  var table = rawExports.table;\r\n  var setargc = rawExports._setargc || function() {};\r\n\r\n  // Provide views for all sorts of basic values\r\n  var buffer, I8, U8, I16, U16, I32, U32, F32, F64, I64, U64;\r\n\r\n  /** Updates memory views if memory has grown meanwhile. */\r\n  function checkMem() {\r\n    // see: https://github.com/WebAssembly/design/issues/1210\r\n    if (buffer !== memory.buffer) {\r\n      buffer = memory.buffer;\r\n      I8  = new Int8Array(buffer);\r\n      U8  = new Uint8Array(buffer);\r\n      I16 = new Int16Array(buffer);\r\n      U16 = new Uint16Array(buffer);\r\n      I32 = new Int32Array(buffer);\r\n      U32 = new Uint32Array(buffer);\r\n      if (hasBigInt64) {\r\n        I64 = new BigInt64Array(buffer);\r\n        U64 = new BigUint64Array(buffer);\r\n      }\r\n      F32 = new Float32Array(buffer);\r\n      F64 = new Float64Array(buffer);\r\n    }\r\n  }\r\n  checkMem();\r\n\r\n  /** Allocates a new string in the module's memory and returns its pointer. */\r\n  function newString(str) {\r\n    var dataLength = str.length;\r\n    var ptr = memory_allocate(4 + (dataLength << 1));\r\n    var dataOffset = (4 + ptr) >>> 1;\r\n    checkMem();\r\n    U32[ptr >>> 2] = dataLength;\r\n    for (let i = 0; i < dataLength; ++i) U16[dataOffset + i] = str.charCodeAt(i);\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.newString = newString;\r\n\r\n  /** Gets a string from the module's memory by its pointer. */\r\n  function getString(ptr) {\r\n    checkMem();\r\n    return getStringImpl(U32, U16, ptr);\r\n  }\r\n\r\n  baseModule.getString = getString;\r\n\r\n  function computeBufferSize(byteLength) {\r\n    const HEADER_SIZE = 8;\r\n    return 1 << (32 - Math.clz32(byteLength + HEADER_SIZE - 1));\r\n  }\r\n\r\n  /** Creates a new typed array in the module's memory and returns its pointer. */\r\n  function newArray(view, length, unsafe) {\r\n    var ctor = view.constructor;\r\n    if (ctor === Function) { // TypedArray constructor created in memory\r\n      ctor = view;\r\n      view = null;\r\n    } else { // TypedArray instance copied into memory\r\n      if (length === undefined) length = view.length;\r\n    }\r\n    var elementSize = ctor.BYTES_PER_ELEMENT;\r\n    if (!elementSize) throw Error(\"not a typed array\");\r\n    var byteLength = elementSize * length;\r\n    var ptr = memory_allocate(12); // TypedArray header\r\n    var buf = memory_allocate(computeBufferSize(byteLength)); // ArrayBuffer\r\n    checkMem();\r\n    U32[ ptr      >>> 2] = buf;        // .buffer\r\n    U32[(ptr + 4) >>> 2] = 0;          // .byteOffset\r\n    U32[(ptr + 8) >>> 2] = byteLength; // .byteLength\r\n    U32[ buf      >>> 2] = byteLength; // .byteLength\r\n    U32[(buf + 4) >>> 2] = 0;          // 0\r\n    if (view) {\r\n      new ctor(buffer, buf + 8, length).set(view);\r\n      if (view.length < length && !unsafe) {\r\n        let setLength = elementSize * view.length;\r\n        memory_fill(buf + 8 + setLength, 0, byteLength - setLength);\r\n      }\r\n    } else if (!unsafe) {\r\n      memory_fill(buf + 8, 0, byteLength);\r\n    }\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.newArray = newArray;\r\n\r\n  /** Gets a view on a typed array in the module's memory by its pointer. */\r\n  function getArray(ctor, ptr) {\r\n    var elementSize = ctor.BYTES_PER_ELEMENT;\r\n    if (!elementSize) throw Error(\"not a typed array\");\r\n    checkMem();\r\n    var buf        = U32[ ptr      >>> 2];\r\n    var byteOffset = U32[(ptr + 4) >>> 2];\r\n    var byteLength = U32[(ptr + 8) >>> 2];\r\n    return new ctor(buffer, buf + 8 + byteOffset, (byteLength - byteOffset) / elementSize);\r\n  }\r\n\r\n  baseModule.getArray = getArray;\r\n\r\n  /** Frees a typed array in the module's memory. Must not be accessed anymore afterwards. */\r\n  function freeArray(ptr) {\r\n    checkMem();\r\n    var buf = U32[ptr >>> 2];\r\n    memory_free(buf);\r\n    memory_free(ptr);\r\n  }\r\n\r\n  baseModule.freeArray = freeArray;\r\n\r\n  /**\r\n   * Creates a new function in the module's table and returns its pointer. Note that only actual\r\n   * WebAssembly functions, i.e. as exported by the module, are supported.\r\n   */\r\n  function newFunction(fn) {\r\n    if (typeof fn.original === \"function\") fn = fn.original;\r\n    var index = table.length;\r\n    table.grow(1);\r\n    table.set(index, fn);\r\n    return index;\r\n  }\r\n\r\n  baseModule.newFunction = newFunction;\r\n\r\n  /** Gets a function by its pointer. */\r\n  function getFunction(ptr) {\r\n    return wrapFunction(table.get(ptr), setargc);\r\n  }\r\n\r\n  baseModule.getFunction = getFunction;\r\n\r\n  // Pull basic exports to baseModule so code in preInstantiate can use them\r\n  baseModule.memory = baseModule.memory || memory;\r\n  baseModule.table = baseModule.table || table;\r\n\r\n  // Demangle exports and provide the usual utility on the prototype\r\n  return demangle(rawExports, Object.defineProperties(baseModule, {\r\n    I8: { get: function() { checkMem(); return I8; } },\r\n    U8: { get: function() { checkMem(); return U8; } },\r\n    I16: { get: function() { checkMem(); return I16; } },\r\n    U16: { get: function() { checkMem(); return U16; } },\r\n    I32: { get: function() { checkMem(); return I32; } },\r\n    U32: { get: function() { checkMem(); return U32; } },\r\n    I64: { get: function() { checkMem(); return I64; } },\r\n    U64: { get: function() { checkMem(); return U64; } },\r\n    F32: { get: function() { checkMem(); return F32; } },\r\n    F64: { get: function() { checkMem(); return F64; } }\r\n  }));\r\n}\r\n\r\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\r\nfunction wrapFunction(fn, setargc) {\r\n  var wrap = (...args) => {\r\n    setargc(args.length);\r\n    return fn(...args);\r\n  }\r\n  // adding a function to the table with `newFunction` is limited to actual WebAssembly functions,\r\n  // hence we can't use the wrapper and instead need to provide a reference to the original\r\n  wrap.original = fn;\r\n  return wrap;\r\n}\r\n\r\n/** Instantiates an AssemblyScript module using the specified imports. */\r\nfunction instantiate(module, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    new WebAssembly.Instance(module, imports)\r\n  );\r\n}\r\n\r\nexports.instantiate = instantiate;\r\n\r\n/** Instantiates an AssemblyScript module from a buffer using the specified imports. */\r\nfunction instantiateBuffer(buffer, imports) {\r\n  return instantiate(new WebAssembly.Module(buffer), imports);\r\n}\r\n\r\nexports.instantiateBuffer = instantiateBuffer;\r\n\r\n/** Instantiates an AssemblyScript module from a response using the specified imports. */\r\nasync function instantiateStreaming(response, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    (await WebAssembly.instantiateStreaming(response, imports)).instance\r\n  );\r\n}\r\n\r\nexports.instantiateStreaming = instantiateStreaming;\r\n\r\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\r\nfunction demangle(exports, baseModule) {\r\n  var module = baseModule ? Object.create(baseModule) : {};\r\n  var setargc = exports._setargc || function() {};\r\n  function hasOwnProperty(elem, prop) {\r\n    return Object.prototype.hasOwnProperty.call(elem, prop);\r\n  }\r\n  for (let internalName in exports) {\r\n    if (!hasOwnProperty(exports, internalName)) continue;\r\n    let elem = exports[internalName];\r\n    let parts = internalName.split(\".\");\r\n    let curr = module;\r\n    while (parts.length > 1) {\r\n      let part = parts.shift();\r\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\r\n      curr = curr[part];\r\n    }\r\n    let name = parts[0];\r\n    let hash = name.indexOf(\"#\");\r\n    if (hash >= 0) {\r\n      let className = name.substring(0, hash);\r\n      let classElem = curr[className];\r\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\r\n        let ctor = function(...args) {\r\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\r\n        };\r\n        ctor.prototype = {};\r\n        ctor.wrap = function(thisValue) {\r\n          return Object.create(ctor.prototype, { [thisPtr]: { value: thisValue, writable: false } });\r\n        };\r\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\r\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\r\n        );\r\n        curr[className] = ctor;\r\n      }\r\n      name = name.substring(hash + 1);\r\n      curr = curr[className].prototype;\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\r\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\r\n          Object.defineProperty(curr, name, {\r\n            get: function() { return getter(this[thisPtr]); },\r\n            set: function(value) { setter(this[thisPtr], value); },\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else {\r\n        if (name === 'constructor') {\r\n          curr[name] = wrapFunction(elem, setargc);\r\n        } else { // for methods\r\n          Object.defineProperty(curr, name, {\r\n            value: function (...args) {\r\n              setargc(args.length);\r\n              return elem(this[thisPtr], ...args);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          Object.defineProperty(curr, name, {\r\n            get: exports[internalName.replace(\"set:\", \"get:\")],\r\n            set: exports[internalName.replace(\"get:\", \"set:\")],\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else if (typeof elem === \"function\") {\r\n        curr[name] = wrapFunction(elem, setargc);\r\n      } else {\r\n        curr[name] = elem;\r\n      }\r\n    }\r\n  }\r\n\r\n  return module;\r\n}\r\n\r\nexports.demangle = demangle;\r\n","/**\r\n * A value indicating how to repeat the pattern's image.\r\n */\r\nexport enum CanvasPatternRepetition {\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern in both the x and y directions.\r\n   */\r\n  repeat = 0,\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern only the x direction.\r\n   */\r\n  repeat_x = 1,\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern only the y direction.\r\n   */\r\n  repeat_y = 2,\r\n  /**\r\n   * A canvas pattern repetition indicationg no repeating pattern.\r\n   */\r\n  no_repeat = 3,\r\n}\r\n","export enum FillRule {\r\n  nonzero = 0,\r\n  evenodd = 1,\r\n}\r\n","export enum ImageSmoothingQuality {\r\n  low = 0,\r\n  medium = 1,\r\n  high = 2,\r\n}","/**\r\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\r\n * of compositing operation to apply when drawing new shapes.\r\n */\r\nexport enum GlobalCompositeOperationValue {\r\n  /**\r\n   * This is the default setting and draws new shapes on top of the existing canvas content\r\n   */\r\n  \"source-over\" = 0,\r\n  /**\r\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\r\n   * Everything else is made transparent.\r\n   */\r\n  \"source-in\" = 1,\r\n  /**\r\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\r\n   */\r\n  \"source-out\" = 2,\r\n  /**\r\n   * The new shape is only drawn where it overlaps the existing canvas content.\r\n   */\r\n  \"source-atop\" = 3,\r\n  /**\r\n   * New shapes are drawn behind the existing canvas content.\r\n   */\r\n  \"destination-over\" = 4,\r\n  /**\r\n   * The existing canvas content is kept where both the new shape and existing canvas content\r\n   * overlap. Everything else is made transparent.\r\n   */\r\n  \"destination-in\" = 5,\r\n  /**\r\n   * The existing content is kept where it doesn't overlap the new shape.\r\n   */\r\n  \"destination-out\" = 6,\r\n  /**\r\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\r\n   * behind the canvas content.\r\n   */\r\n  \"destination-atop\" = 7,\r\n  /**\r\n   * Where both shapes overlap the color is determined by adding color values.\r\n   */\r\n  \"lighter\" = 8,\r\n  /**\r\n   * Only the new shape is shown.\r\n   */\r\n  \"copy\" = 9,\r\n  /**\r\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\r\n   */\r\n  \"xor\" = 10,\r\n  /**\r\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\r\n   * layer. A darker picture is the result.\r\n   */\r\n  \"multiply\" = 11,\r\n  /**\r\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\r\n   * (opposite of multiply)\r\n   */\r\n  \"screen\" = 12,\r\n  /**\r\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\r\n   * parts become lighter.\r\n   */\r\n  \"overlay\" = 13,\r\n  /**\r\n   * Retains the darkest pixels of both layers.\r\n   */\r\n  \"darken\" = 14,\r\n  /**\r\n   * Retains the lightest pixels of both layers.\r\n   */\r\n  \"lighten\" = 15,\r\n  /**\r\n   * Divides the bottom layer by the inverted top layer.\r\n   */\r\n  \"color-dodge\" = 16,\r\n  /**\r\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\r\n   */\r\n  \"color-burn\" = 17,\r\n  /**\r\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\r\n   */\r\n  \"hard-light\" = 18,\r\n  /**\r\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\r\n   */\r\n  \"soft-light\" = 19,\r\n  /**\r\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\r\n   * value.\r\n   */\r\n  \"difference\" = 20,\r\n  /**\r\n   * Like difference, but with lower contrast.\r\n   */\r\n  \"exclusion\" = 21,\r\n  /**\r\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\r\n   */\r\n  \"hue\" = 22,\r\n  /**\r\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\r\n   */\r\n  \"saturation\" = 23,\r\n  /**\r\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\r\n   */\r\n  \"color\" = 24,\r\n  /**\r\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\r\n   */\r\n  \"luminosity\" = 25,\r\n}\r\n","/**\r\n * The CanvasRenderingContext2D.direction value of the Canvas 2D API specifies the current text\r\n * direction used to draw text onto the canvas.\r\n */\r\nexport enum CanvasDirection {\r\n  /**\r\n   * The text direction is left-to-right.\r\n   */\r\n  ltr = 0,\r\n  /**\r\n   * The text direction is right-to-left.\r\n   */\r\n  rtl = 1,\r\n  /**\r\n   * The text direction is inherited from the <canvas> element or the Document as appropriate. Default value.\r\n   */\r\n  inherit = 2,\r\n}\r\n","/**\r\n * The TextAlign enum specifies the current text alignment used when drawing text.\r\n *\r\n * The alignment is relative to the x value of the fillText() method. For example, if textAlign is\r\n * \"center\", then the text's left edge will be at x - (textWidth / 2).\r\n */\r\nexport enum TextAlign {\r\n  /**\r\n   * The text is left-aligned.\r\n   **/\r\n  left = 0,\r\n  /**\r\n   * The text is right-aligned.\r\n   **/\r\n  right = 1,\r\n  /**\r\n   * The text is centered.\r\n   **/\r\n  center = 2,\r\n  /**\r\n   * The text is aligned at the normal start of the line (left-aligned for left-to-right locales, right-aligned for right-to-left locales).\r\n   **/\r\n  start = 3,\r\n  /**\r\n   * The text is aligned at the normal end of the line (right-aligned for left-to-right locales, left-aligned for right-to-left locales).\r\n   **/\r\n  end = 4,\r\n}\r\n","/**\r\n * The TextBasline enum specifies the current text baseline used when drawing text.\r\n */\r\nexport enum TextBaseline {\r\n  /**\r\n   * The text baseline is the top of the em square.\r\n   **/\r\n  top = 0,\r\n  /**\r\n   * The text baseline is the hanging baseline. (Used by Tibetan and other Indic scripts.)\r\n   **/\r\n  hanging = 1,\r\n  /**\r\n   * The text baseline is the middle of the em square.\r\n   **/\r\n  middle = 2,\r\n  /**\r\n   * The text baseline is the normal alphabetic baseline. Default value.\r\n   **/\r\n  alphabetic = 3,\r\n  /**\r\n   * The text baseline is the ideographic baseline; this is the bottom of the body of the characters, if the main body of characters protrudes beneath the alphabetic baseline. (Used by Chinese, Japanese, and Korean scripts.)\r\n   **/\r\n  ideographic = 4,\r\n  /**\r\n   * The text baseline is the bottom of the bounding box. This differs from the ideographic baseline in that the ideographic baseline doesn't consider descenders.\r\n   **/\r\n  bottom = 5,\r\n}","export enum LineCap {\r\n  butt = 0,\r\n  round = 1,\r\n  square = 2,\r\n}\r\n","/**\r\n * The LineJoin enum responsible for setting the lineJoin property of the Canvas 2D API determines\r\n * the shape used to join two line segments where they meet.\r\n *\r\n * This property has no effect wherever two connected segments have the same direction, because no\r\n * joining area will be added in this case. Degenerate segments with a length of zero (i.e., with\r\n * all endpoints and control points at the exact same position) are also ignored.\r\n */\r\nexport enum LineJoin {\r\n  /**\r\n   * Rounds off the corners of a shape by filling an additional sector of disc centered at the\r\n   * common endpoint of connected segments. The radius for these rounded corners is equal to the\r\n   * line width.\r\n   */\r\n  bevel = 0,\r\n  /**\r\n   * Fills an additional triangular area between the common endpoint of connected segments, and the\r\n   * separate outside rectangular corners of each segment.\r\n   */\r\n  round = 1,\r\n  /**\r\n   * Connected segments are joined by extending their outside edges to connect at a single point,\r\n   * with the effect of filling an additional lozenge-shaped area. This setting is affected by the\r\n   * miterLimit property. Default value.\r\n   */\r\n  miter = 2,\r\n}","import { ASUtil, instantiateBuffer, instantiate, instantiateStreaming } from \"assemblyscript/lib/loader\";\r\nimport { ICanvasSYS } from \"../util/ICanvasSYS\";\r\nimport { CanvasPatternRepetition } from \"../shared/CanvasPatternRepetition\";\r\nimport { CanvasInstruction } from \"../shared/CanvasInstruction\";\r\nimport { FillRule } from \"../shared/FillRule\";\r\nimport { ImageSmoothingQuality } from \"../shared/ImageSmoothingQuality\";\r\nimport { GlobalCompositeOperationValue } from \"../shared/GlobalCompositeOperationValue\";\r\nimport { CanvasDirection } from \"../shared/CanvasDirection\";\r\nimport { TextAlign } from \"../shared/TextAlign\";\r\nimport { TextBaseline } from \"../shared/TextBaseline\";\r\nimport { LineCap } from \"../shared/LineCap\";\r\nimport { LineJoin } from \"../shared/LineJoin\";\r\n\r\nexport class AS2DGlue<T> {\r\n  public imports: any = null;\r\n  public wasm: (ASUtil & T & ICanvasSYS) | null = null;\r\n  private id: number = -1;\r\n\r\n  public instantiateBuffer(buffer: any, imports: any): ASUtil & T & ICanvasSYS {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = instantiateBuffer(buffer, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  public async instantiateStreaming(response: Promise<Response>, imports: any): Promise<ASUtil & T & ICanvasSYS> {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = await instantiateStreaming(response, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  public instantiate(module: any, imports: any): ASUtil & T & ICanvasSYS {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = instantiate(module, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  private hookImports(): void {\r\n    this.imports.__canvas_sys = {\r\n      addColorStop: this.addColorStop.bind(this),\r\n      createLinearGradient: this.createLinearGradient.bind(this),\r\n      createPattern: this.createPattern.bind(this),\r\n      createRadialGradient: this.createRadialGradient.bind(this),\r\n      disposeCanvasGradient: this.disposeCanvasGradient.bind(this),\r\n      disposeCanvasPattern: this.disposeCanvasPattern.bind(this),\r\n      disposeImage: this.disposeImage.bind(this),\r\n      loadImage: this.loadImage.bind(this),\r\n      measureText: this.measureText.bind(this),\r\n      render: this.render.bind(this),\r\n    };\r\n  }\r\n\r\n  private hookWasmApi(): void {\r\n    this.wasm!.contexts = {};\r\n    this.wasm!.gradients = {};\r\n    this.wasm!.images = {};\r\n    this.wasm!.loading = {};\r\n    this.wasm!.patterns = {};\r\n    this.wasm!.useContext = this.useContext.bind(this);\r\n  }\r\n\r\n  private useContext(name: string, ctx: CanvasRenderingContext2D): number {\r\n    this.id += 1;\r\n    this.wasm!.contexts[this.id] = ctx;\r\n    this.wasm!.__use_context(this.wasm!.newString(name), this.id);\r\n    return this.id;\r\n  }\r\n\r\n  private createLinearGradient(objid: number, x0: number, y0: number, x1: number, y1: number): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\r\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createLinearGradient(x0, y0, x1, y1);\r\n    return this.id;\r\n  }\r\n\r\n  private createRadialGradient(objid: number, x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\r\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n    return this.id;\r\n  }\r\n\r\n  private addColorStop(objid: number, offset: number, color: number): void {\r\n    if (!this.wasm!.gradients[objid]) throw new Error(\"Cannot find gradient: \" + objid);\r\n    this.wasm!.gradients[objid].addColorStop(offset, this.wasm!.getString(color));\r\n  }\r\n\r\n  private loadImage(imgPointer: number, srcPointer: number): number {\r\n    var src: string = this.wasm!.getString(srcPointer);\r\n    this.id += 1;\r\n    var result: number = this.id;\r\n    this.wasm!.loading[result] = fetch(src)\r\n      .then(e => e.blob())\r\n      .then(createImageBitmap)\r\n      .then(e => {\r\n        this.wasm!.__image_loaded(imgPointer, e.width, e.height);\r\n        this.wasm!.images[result] = e;\r\n        return e;\r\n      });\r\n    return this.id;\r\n  }\r\n\r\n  private createPattern(cvsobjid: number, objid: number, repetition: CanvasPatternRepetition): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    if (!this.wasm!.images[objid]) throw new Error(\"Cannot find image: \" + objid);\r\n    this.wasm!.patterns[this.id] = this.wasm!.contexts[cvsobjid].createPattern(\r\n      this.wasm!.images[objid],\r\n      CanvasPatternRepetition[repetition].replace(\"_\", \"-\"),\r\n    )!;\r\n    return this.id;\r\n  }\r\n\r\n  public measureText(cvsobjid: number, text: number): number {\r\n    // The canvas exists, because render was already called\r\n    // if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    var ctx: CanvasRenderingContext2D = this.wasm!.contexts[cvsobjid];\r\n    return ctx.measureText(this.wasm!.getString(text)).width;\r\n  }\r\n\r\n  private render(cvsobjid: number, pointer: number): void {\r\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    var wasm: ASUtil & T & ICanvasSYS = this.wasm!;\r\n    var ctx: CanvasRenderingContext2D = wasm.contexts[cvsobjid];\r\n    var data = new Float64Array(wasm.memory.buffer, pointer, 0x10000);\r\n    var i = 0;\r\n    var strings: { [pointer: number]: string; } = {};\r\n    while (i < 0x10000 && data[i] !== CanvasInstruction.Commit) {\r\n      switch (data[i]) {\r\n        case CanvasInstruction.Arc: {\r\n          ctx.arc(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7] === 1);\r\n          break;\r\n        }\r\n        case CanvasInstruction.ArcTo: {\r\n          ctx.arcTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.BeginPath: {\r\n          ctx.beginPath();\r\n          break;\r\n        }\r\n        case CanvasInstruction.BezierCurveTo: {\r\n          ctx.bezierCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Clip: {\r\n          ctx.clip();\r\n          break;\r\n        }\r\n        case CanvasInstruction.ClosePath: {\r\n          ctx.closePath();\r\n          break;\r\n        }\r\n        case CanvasInstruction.ClearRect: {\r\n          ctx.clearRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Direction: {\r\n          ctx.direction = CanvasDirection[data[i + 2]] as \"rtl\" | \"ltr\" | \"inherit\";\r\n          break;\r\n        }\r\n        case CanvasInstruction.DrawImage: {\r\n          ctx.drawImage(wasm.images[data[i + 2]], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9], data[i + 10]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Ellipse: {\r\n          ctx.ellipse(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9] === 1);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Fill: {\r\n          ctx.fill(FillRule[data[i + 2]] as CanvasFillRule);\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillGradient: {\r\n          ctx.fillStyle = wasm.gradients[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillPattern: {\r\n          ctx.fillStyle = wasm.patterns[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillRect: {\r\n          ctx.fillRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillStyle: {\r\n          ctx.fillStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillText: {\r\n          ctx.fillText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillTextWidth: {\r\n          ctx.fillText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n            data[i + 5],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.Filter: {\r\n          ctx.filter = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.Font: {\r\n          ctx.font = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.GlobalAlpha: {\r\n          ctx.globalAlpha = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.GlobalCompositeOperation: {\r\n          ctx.globalCompositeOperation = GlobalCompositeOperationValue[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ImageSmoothingEnabled: {\r\n          ctx.imageSmoothingEnabled = data[i + 1] === 1;\r\n          break;\r\n        }\r\n        case CanvasInstruction.ImageSmoothingQuality: {\r\n          ctx.imageSmoothingQuality = ImageSmoothingQuality[data[i + 2]] as \"low\" | \"medium\" | \"high\";\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineCap: {\r\n          ctx.lineCap = LineCap[data[i + 2]] as CanvasLineCap;\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineDash: {\r\n          // @ts-ignore: Float64Array is not a valid TypedArrayConstructor, and setLineDash accepts Float64Array\r\n          ctx.setLineDash(wasm.getArray(Float64Array, data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineDashOffset: {\r\n          ctx.lineDashOffset = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineJoin: {\r\n          ctx.lineJoin = LineJoin[data[i + 2]] as CanvasLineJoin;\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineTo: {\r\n          ctx.lineTo(data[i + 2], data[i + 3]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineWidth: {\r\n          ctx.lineWidth = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.MiterLimit: {\r\n          ctx.miterLimit = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.MoveTo: {\r\n          ctx.moveTo(data[i + 2], data[i + 3]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.QuadraticCurveTo: {\r\n          ctx.quadraticCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Rect: {\r\n          ctx.rect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Restore: {\r\n          ctx.restore();\r\n          break;\r\n        }\r\n        case CanvasInstruction.Save: {\r\n          ctx.save();\r\n          break;\r\n        }\r\n        case CanvasInstruction.SetTransform: {\r\n          ctx.setTransform(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowBlur: {\r\n          ctx.shadowBlur = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowColor: {\r\n          ctx.shadowColor = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowOffsetX: {\r\n          ctx.shadowOffsetX = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowOffsetY: {\r\n          ctx.shadowOffsetY = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.Stroke: {\r\n          ctx.stroke();\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeGradient: {\r\n          ctx.strokeStyle = wasm.gradients[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokePattern: {\r\n          ctx.strokeStyle = wasm.patterns[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeRect: {\r\n          ctx.strokeRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeStyle: {\r\n          ctx.strokeStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeText: {\r\n          ctx.strokeText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeTextWidth: {\r\n          ctx.strokeText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n            data[i + 5],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.TextAlign: {\r\n          ctx.textAlign = TextAlign[data[i + 2]] as CanvasTextAlign;\r\n          break;\r\n        }\r\n        case CanvasInstruction.TextBaseline: {\r\n          ctx.textBaseline = TextBaseline[data[i + 2]] as CanvasTextBaseline;\r\n          break;\r\n        }\r\n      }\r\n      i = data[i + 1];\r\n    }\r\n  }\r\n\r\n  disposeCanvasPattern(id: number): void {\r\n    delete this.wasm!.patterns[id];\r\n  }\r\n\r\n  disposeImage(id: number): void {\r\n    delete this.wasm!.images[id];\r\n  }\r\n\r\n  disposeCanvasGradient(id: number): void {\r\n    delete this.wasm!.gradients[id];\r\n  }\r\n}\r\n","/**\r\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\r\n * of compositing operation to apply when drawing new shapes.\r\n */\r\nexport enum GlobalCompositeOperation {\r\n  /**\r\n   * This is the default setting and draws new shapes on top of the existing canvas content\r\n   */\r\n  source_over = 0,\r\n  /**\r\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\r\n   * Everything else is made transparent.\r\n   */\r\n  source_in = 1,\r\n  /**\r\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\r\n   */\r\n  source_out = 2,\r\n  /**\r\n   * The new shape is only drawn where it overlaps the existing canvas content.\r\n   */\r\n  source_atop = 3,\r\n  /**\r\n   * New shapes are drawn behind the existing canvas content.\r\n   */\r\n  destination_over = 4,\r\n  /**\r\n   * The existing canvas content is kept where both the new shape and existing canvas content\r\n   * overlap. Everything else is made transparent.\r\n   */\r\n  destination_in = 5,\r\n  /**\r\n   * The existing content is kept where it doesn't overlap the new shape.\r\n   */\r\n  destination_out = 6,\r\n  /**\r\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\r\n   * behind the canvas content.\r\n   */\r\n  destination_atop = 7,\r\n  /**\r\n   * Where both shapes overlap the color is determined by adding color values.\r\n   */\r\n  lighter = 8,\r\n  /**\r\n   * Only the new shape is shown.\r\n   */\r\n  copy = 9,\r\n  /**\r\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\r\n   */\r\n  xor = 10,\r\n  /**\r\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\r\n   * layer. A darker picture is the result.\r\n   */\r\n  multiply = 11,\r\n  /**\r\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\r\n   * (opposite of multiply)\r\n   */\r\n  screen = 12,\r\n  /**\r\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\r\n   * parts become lighter.\r\n   */\r\n  overlay = 13,\r\n  /**\r\n   * Retains the darkest pixels of both layers.\r\n   */\r\n  darken = 14,\r\n  /**\r\n   * Retains the lightest pixels of both layers.\r\n   */\r\n  lighten = 15,\r\n  /**\r\n   * Divides the bottom layer by the inverted top layer.\r\n   */\r\n  color_dodge = 16,\r\n  /**\r\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\r\n   */\r\n  color_burn = 17,\r\n  /**\r\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\r\n   */\r\n  hard_light = 18,\r\n  /**\r\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\r\n   */\r\n  soft_light = 19,\r\n  /**\r\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\r\n   * value.\r\n   */\r\n  difference = 20,\r\n  /**\r\n   * Like difference, but with lower contrast.\r\n   */\r\n  exclusion = 21,\r\n  /**\r\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\r\n   */\r\n  hue = 22,\r\n  /**\r\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\r\n   */\r\n  saturation = 23,\r\n  /**\r\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\r\n   */\r\n  color = 24,\r\n  /**\r\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\r\n   */\r\n  luminosity = 25,\r\n}\r\n","import { ASUtil } from \"assemblyscript/lib/loader\";\r\nimport { ICanvasSYS } from \"./util/ICanvasSYS\";\r\nimport { AS2DGlue } from \"./glue/AS2DGlue\";\r\n\r\nexport function instantiateBuffer<T>(buffer: Buffer, imports: any = {}): ICanvasSYS & ASUtil & T {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiateBuffer(buffer, imports);\r\n}\r\n\r\nexport function instantiate<T>(mod: any, imports: any = {}): ICanvasSYS & ASUtil & T {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiate(mod, imports);\r\n}\r\n\r\nexport function instantiateStreaming<T>(response: Promise<Response>, imports: any = {}): Promise<ICanvasSYS & ASUtil & T> {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiateStreaming(response, imports);\r\n}\r\n\r\nexport * from \"./glue/AS2DGlue\";\r\n\r\nexport * from \"./shared/CanvasDirection\";\r\nexport * from \"./shared/CanvasInstruction\";\r\nexport * from \"./shared/CanvasPatternRepetition\";\r\nexport * from \"./shared/FillRule\";\r\nexport * from \"./shared/GlobalCompositeOperation\";\r\nexport * from \"./shared/GlobalCompositeOperationValue\";\r\nexport * from \"./shared/ImageSmoothingQuality\";\r\nexport * from \"./shared/LineCap\";\r\nexport * from \"./shared/LineJoin\";\r\nexport * from \"./shared/TextAlign\";\r\nexport * from \"./shared/TextBaseline\";\r\n\r\nexport * from \"./util/ICanvasSYS\";\r\n","import { instantiateStreaming, instantiateBuffer } from \"as2d\";\r\nconst fs = require(\"fs\");\r\nconst buffer = fs.readFileSync(\"./build/optimized.wasm\");\r\n\r\nasync function streaming(): Promise<void> {\r\n  const blob = new Blob([buffer], { type: \"application/wasm\" });\r\n  const url = URL.createObjectURL(blob);\r\n  // @ts-ignore\r\n  window.wasm = await instantiateStreaming<AS2DExample>(fetch(url), {});\r\n}\r\n\r\ninterface AS2DExample {\r\n  init(): void;\r\n  mouseMove(x: number, y: number): void;\r\n}\r\n\r\n// @ts-ignore\r\nif (typeof WebAssembly.instantiateStreaming === \"function\") {\r\n  streaming().then(postInstantiate);\r\n} else {\r\n  // @ts-ignore\r\n  window.wasm = instantiateBuffer<AS2DExample>(buffer, {});\r\n  postInstantiate();\r\n}\r\n\r\nfunction postInstantiate() {\r\n  // @ts-ignore\r\n  const wasm = window.wasm;\r\n  const canvas = document.querySelector(\"canvas\");\r\n  if (canvas) {\r\n    canvas.parentElement!.removeChild(canvas);\r\n  }\r\n\r\n  const ctx = document.createElement(\"canvas\")!.getContext(\"2d\")!;\r\n  ctx.canvas.width = 800;\r\n  ctx.canvas.height = 600;\r\n  ctx.canvas.style.border = \"solid 1px black\";\r\n  ctx.canvas.addEventListener(\"mousemove\", (e) => {\r\n    var rect: ClientRect = (e.target as HTMLCanvasElement).getBoundingClientRect();\r\n    wasm.mouseMove(e.clientX - rect.left, e.clientY - rect.top);\r\n  });\r\n\r\n  document.body.appendChild(ctx.canvas);\r\n  wasm.useContext(\"main\", ctx);\r\n  wasm.init();\r\n}\r\n\r\n","if (!window.frame) {\r\n  window.frame = function frame() {\r\n    requestAnimationFrame(frame);\r\n    if (window.wasm) {\r\n      window.wasm.update();\r\n    }\r\n  }\r\n  requestAnimationFrame(window.frame);\r\n}\r\n\r\nif (!window.Buffer) window.Buffer = require(\"buffer\").Buffer;\r\n\r\nrequire(\"./index.ts\");\r\n"]}