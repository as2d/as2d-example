{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/assemblyscript/lib/loader/index.js","../../src/shared/CanvasPatternRepetition.ts","../../src/shared/FillRule.ts","../../src/shared/ImageSmoothingQuality.ts","../../src/shared/GlobalCompositeOperationValue.ts","../../src/shared/CanvasDirection.ts","../../src/shared/TextAlign.ts","../../src/shared/TextBaseline.ts","../../src/shared/LineCap.ts","../../src/shared/LineJoin.ts","../../src/glue/AS2DGlue.ts","../../src/shared/GlobalCompositeOperation.ts","../src/index.ts","index.ts","index.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["window","frame","requestAnimationFrame","wasm","update","Buffer","require","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\"use strict\";\r\n\r\n// Runtime header offsets\r\nconst ID_OFFSET = -8;\r\nconst SIZE_OFFSET = -4;\r\n\r\n// Runtime ids\r\nconst ARRAYBUFFER_ID = 0;\r\nconst STRING_ID = 1;\r\nconst ARRAYBUFFERVIEW_ID = 2;\r\n\r\n// Runtime type information\r\nconst ARRAYBUFFERVIEW = 1 << 0;\r\nconst ARRAY = 1 << 1;\r\nconst SET = 1 << 2;\r\nconst MAP = 1 << 3;\r\nconst VAL_ALIGN_OFFSET = 5;\r\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\r\nconst VAL_SIGNED = 1 << 10;\r\nconst VAL_FLOAT = 1 << 11;\r\nconst VAL_NULLABLE = 1 << 12;\r\nconst VAL_MANAGED = 1 << 13;\r\nconst KEY_ALIGN_OFFSET = 14;\r\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\r\nconst KEY_SIGNED = 1 << 19;\r\nconst KEY_FLOAT = 1 << 20;\r\nconst KEY_NULLABLE = 1 << 21;\r\nconst KEY_MANAGED = 1 << 22;\r\n\r\n// Array(BufferView) layout\r\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\r\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\r\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\r\nconst ARRAYBUFFERVIEW_SIZE = 12;\r\nconst ARRAY_LENGTH_OFFSET = 12;\r\nconst ARRAY_SIZE = 16;\r\n\r\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\r\nconst THIS = Symbol();\r\nconst CHUNKSIZE = 1024;\r\n\r\n/** Gets a string from an U32 and an U16 view on a memory. */\r\nfunction getStringImpl(buffer, ptr) {\r\n  const U32 = new Uint32Array(buffer);\r\n  const U16 = new Uint16Array(buffer);\r\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\r\n  var offset = ptr >>> 1;\r\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\r\n  const parts = [];\r\n  do {\r\n    const last = U16[offset + CHUNKSIZE - 1];\r\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\r\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\r\n    length -= size;\r\n  } while (length > CHUNKSIZE);\r\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\r\n}\r\n\r\n/** Prepares the base module prior to instantiation. */\r\nfunction preInstantiate(imports) {\r\n  const baseModule = {};\r\n\r\n  function getString(memory, ptr) {\r\n    if (!memory) return \"<yet unknown>\";\r\n    return getStringImpl(memory.buffer, ptr);\r\n  }\r\n\r\n  // add common imports used by stdlib for convenience\r\n  const env = (imports.env = imports.env || {});\r\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\r\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\r\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\r\n  }\r\n  env.trace = env.trace || function trace(mesg, n) {\r\n    const memory = baseModule.memory || env.memory;\r\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\r\n  }\r\n  imports.Math = imports.Math || Math;\r\n  imports.Date = imports.Date || Date;\r\n\r\n  return baseModule;\r\n}\r\n\r\n/** Prepares the final module once instantiation is complete. */\r\nfunction postInstantiate(baseModule, instance) {\r\n  const rawExports = instance.exports;\r\n  const memory = rawExports.memory;\r\n  const table = rawExports.table;\r\n  const alloc = rawExports[\"__alloc\"];\r\n  const retain = rawExports[\"__retain\"];\r\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\r\n\r\n  /** Gets the runtime type info for the given id. */\r\n  function getInfo(id) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const count = U32[rttiBase >>> 2];\r\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\r\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\r\n  }\r\n\r\n  /** Gets the runtime base id for the given id. */\r\n  function getBase(id) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const count = U32[rttiBase >>> 2];\r\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\r\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\r\n  }\r\n\r\n  /** Gets the runtime alignment of a collection's values. */\r\n  function getValueAlign(info) {\r\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\r\n  }\r\n\r\n  /** Gets the runtime alignment of a collection's keys. */\r\n  function getKeyAlign(info) {\r\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\r\n  }\r\n\r\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\r\n  function __allocString(str) {\r\n    const length = str.length;\r\n    const ptr = alloc(length << 1, STRING_ID);\r\n    const U16 = new Uint16Array(memory.buffer);\r\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\r\n    return ptr;\r\n  }\r\n\r\n  baseModule.__allocString = __allocString;\r\n\r\n  /** Reads a string from the module's memory by its pointer. */\r\n  function __getString(ptr) {\r\n    const buffer = memory.buffer;\r\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\r\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\r\n    return getStringImpl(buffer, ptr);\r\n  }\r\n\r\n  baseModule.__getString = __getString;\r\n\r\n  /** Gets the view matching the specified alignment, signedness and floatness. */\r\n  function getView(alignLog2, signed, float) {\r\n    const buffer = memory.buffer;\r\n    if (float) {\r\n      switch (alignLog2) {\r\n        case 2: return new Float32Array(buffer);\r\n        case 3: return new Float64Array(buffer);\r\n      }\r\n    } else {\r\n      switch (alignLog2) {\r\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\r\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\r\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\r\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\r\n      }\r\n    }\r\n    throw Error(\"unsupported align: \" + alignLog2);\r\n  }\r\n\r\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\r\n  function __allocArray(id, values) {\r\n    const info = getInfo(id);\r\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\r\n    const align = getValueAlign(info);\r\n    const length = values.length;\r\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\r\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\r\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\r\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\r\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\r\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\r\n    if (info & VAL_MANAGED) {\r\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\r\n    } else {\r\n      view.set(values, buf >>> align);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  baseModule.__allocArray = __allocArray;\r\n\r\n  /** Gets a view on the values of an array in the module's memory. */\r\n  function __getArrayView(arr) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    const id = U32[arr + ID_OFFSET >>> 2];\r\n    const info = getInfo(id);\r\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\r\n    const align = getValueAlign(info);\r\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\r\n    const length = info & ARRAY\r\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\r\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\r\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\r\n          .subarray(buf >>>= align, buf + length);\r\n  }\r\n\r\n  baseModule.__getArrayView = __getArrayView;\r\n\r\n  /** Reads (copies) the values of an array from the module's memory. */\r\n  function __getArray(arr) {\r\n    const input = __getArrayView(arr);\r\n    const len = input.length;\r\n    const out = new Array(len);\r\n    for (let i = 0; i < len; i++) out[i] = input[i];\r\n    return out;\r\n  }\r\n\r\n  baseModule.__getArray = __getArray;\r\n\r\n  /** Reads (copies) the data of an ArrayBuffer from the module's memory. */\r\n  function __getArrayBuffer(ptr) {\r\n    const buffer = memory.buffer;\r\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\r\n    return buffer.slice(ptr, ptr + length);\r\n  }\r\n\r\n  baseModule.__getArrayBuffer = __getArrayBuffer;\r\n\r\n  function getTypedArrayImpl(Type, alignLog2, ptr) {\r\n    const buffer = memory.buffer;\r\n    const U32 = new Uint32Array(buffer);\r\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\r\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\r\n  }\r\n\r\n  /** Gets a view on the values of a known-to-be Int8Array in the module's memory. */\r\n  baseModule.__getInt8Array = getTypedArrayImpl.bind(null, Int8Array, 0);\r\n  /** Gets a view on the values of a known-to-be Uint8Array in the module's memory. */\r\n  baseModule.__getUint8Array = getTypedArrayImpl.bind(null, Uint8Array, 0);\r\n  /** Gets a view on the values of a known-to-be Uint8ClampedArray in the module's memory. */\r\n  baseModule.__getUint8ClampedArray = getTypedArrayImpl.bind(null, Uint8ClampedArray, 0);\r\n  /** Gets a view on the values of a known-to-be Int16Array in the module's memory. */\r\n  baseModule.__getInt16Array = getTypedArrayImpl.bind(null, Int16Array, 1);\r\n  /** Gets a view on the values of a known-to-be Uint16Array in the module's memory. */\r\n  baseModule.__getUint16Array = getTypedArrayImpl.bind(null, Uint16Array, 1);\r\n  /** Gets a view on the values of a known-to-be Int32Array in the module's memory. */\r\n  baseModule.__getInt32Array = getTypedArrayImpl.bind(null, Int32Array, 2);\r\n  /** Gets a view on the values of a known-to-be Uint32Array in the module's memory. */\r\n  baseModule.__getUint32Array = getTypedArrayImpl.bind(null, Uint32Array, 2);\r\n  if (BIGINT) {\r\n    /** Gets a view on the values of a known-to-be-Int64Array in the module's memory. */\r\n    baseModule.__getInt64Array = getTypedArrayImpl.bind(null, BigInt64Array, 3);\r\n    /** Gets a view on the values of a known-to-be-Uint64Array in the module's memory. */\r\n    baseModule.__getUint64Array = getTypedArrayImpl.bind(null, BigUint64Array, 3);\r\n  }\r\n  /** Gets a view on the values of a known-to-be Float32Array in the module's memory. */\r\n  baseModule.__getFloat32Array = getTypedArrayImpl.bind(null, Float32Array, 2);\r\n  /** Gets a view on the values of a known-to-be Float64Array in the module's memory. */\r\n  baseModule.__getFloat64Array = getTypedArrayImpl.bind(null, Float64Array, 3);\r\n\r\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\r\n  function __instanceof(ptr, baseId) {\r\n    const U32 = new Uint32Array(memory.buffer);\r\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\r\n    if (id <= U32[rttiBase >>> 2]) {\r\n      do if (id == baseId) return true;\r\n      while (id = getBase(id));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  baseModule.__instanceof = __instanceof;\r\n\r\n  // Pull basic exports to baseModule so code in preInstantiate can use them\r\n  baseModule.memory = baseModule.memory || memory;\r\n  baseModule.table  = baseModule.table  || table;\r\n\r\n  // Demangle exports and provide the usual utility on the prototype\r\n  return demangle(rawExports, baseModule);\r\n}\r\n\r\n/** Wraps a WebAssembly function while also taking care of variable arguments. */\r\nfunction wrapFunction(fn, setargc) {\r\n  var wrap = (...args) => {\r\n    setargc(args.length);\r\n    return fn(...args);\r\n  }\r\n  wrap.original = fn;\r\n  return wrap;\r\n}\r\n\r\nfunction isResponse(o) {\r\n  return typeof Response !== \"undefined\" && o instanceof Response;\r\n}\r\n\r\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\r\nasync function instantiate(source, imports) {\r\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    await WebAssembly.instantiate(\r\n      source instanceof WebAssembly.Module\r\n        ? source\r\n        : await WebAssembly.compile(source),\r\n      imports\r\n    )\r\n  );\r\n}\r\n\r\nexports.instantiate = instantiate;\r\n\r\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\r\nfunction instantiateSync(source, imports) {\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    new WebAssembly.Instance(\r\n      source instanceof WebAssembly.Module\r\n        ? source\r\n        : new WebAssembly.Module(source),\r\n      imports\r\n    )\r\n  )\r\n}\r\n\r\nexports.instantiateSync = instantiateSync;\r\n\r\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\r\nasync function instantiateStreaming(source, imports) {\r\n  if (!WebAssembly.instantiateStreaming) {\r\n    return instantiate(\r\n      isResponse(source = await source)\r\n        ? source.arrayBuffer()\r\n        : source,\r\n      imports\r\n    );\r\n  }\r\n  return postInstantiate(\r\n    preInstantiate(imports || (imports = {})),\r\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\r\n  );\r\n}\r\n\r\nexports.instantiateStreaming = instantiateStreaming;\r\n\r\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\r\nfunction demangle(exports, baseModule) {\r\n  var module = baseModule ? Object.create(baseModule) : {};\r\n  var setargc = exports[\"__setargc\"] || function() {};\r\n  function hasOwnProperty(elem, prop) {\r\n    return Object.prototype.hasOwnProperty.call(elem, prop);\r\n  }\r\n  for (let internalName in exports) {\r\n    if (!hasOwnProperty(exports, internalName)) continue;\r\n    let elem = exports[internalName];\r\n    let parts = internalName.split(\".\");\r\n    let curr = module;\r\n    while (parts.length > 1) {\r\n      let part = parts.shift();\r\n      if (!hasOwnProperty(curr, part)) curr[part] = {};\r\n      curr = curr[part];\r\n    }\r\n    let name = parts[0];\r\n    let hash = name.indexOf(\"#\");\r\n    if (hash >= 0) {\r\n      let className = name.substring(0, hash);\r\n      let classElem = curr[className];\r\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\r\n        let ctor = function(...args) {\r\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\r\n        };\r\n        ctor.prototype = {\r\n          valueOf: function valueOf() {\r\n            return this[THIS];\r\n          }\r\n        };\r\n        ctor.wrap = function(thisValue) {\r\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\r\n        };\r\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\r\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\r\n        );\r\n        curr[className] = ctor;\r\n      }\r\n      name = name.substring(hash + 1);\r\n      curr = curr[className].prototype;\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\r\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\r\n          Object.defineProperty(curr, name, {\r\n            get: function() { return getter(this[THIS]); },\r\n            set: function(value) { setter(this[THIS], value); },\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else {\r\n        if (name === 'constructor') {\r\n          curr[name] = wrapFunction(elem, setargc);\r\n        } else { // for methods\r\n          Object.defineProperty(curr, name, {\r\n            value: function (...args) {\r\n              setargc(args.length);\r\n              return elem(this[THIS], ...args);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      if (/^(get|set):/.test(name)) {\r\n        if (!hasOwnProperty(curr, name = name.substring(4))) {\r\n          Object.defineProperty(curr, name, {\r\n            get: exports[internalName.replace(\"set:\", \"get:\")],\r\n            set: exports[internalName.replace(\"get:\", \"set:\")],\r\n            enumerable: true\r\n          });\r\n        }\r\n      } else if (typeof elem === \"function\") {\r\n        curr[name] = wrapFunction(elem, setargc);\r\n      } else {\r\n        curr[name] = elem;\r\n      }\r\n    }\r\n  }\r\n\r\n  return module;\r\n}\r\n\r\nexports.demangle = demangle;\r\n","/**\r\n * A value indicating how to repeat the pattern's image.\r\n */\r\nexport enum CanvasPatternRepetition {\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern in both the x and y directions.\r\n   */\r\n  repeat = 0,\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern only the x direction.\r\n   */\r\n  repeat_x = 1,\r\n  /**\r\n   * A canvas pattern repetition indicating a repeating pattern only the y direction.\r\n   */\r\n  repeat_y = 2,\r\n  /**\r\n   * A canvas pattern repetition indicationg no repeating pattern.\r\n   */\r\n  no_repeat = 3,\r\n}\r\n","export enum FillRule {\r\n  nonzero = 0,\r\n  evenodd = 1,\r\n}\r\n","export enum ImageSmoothingQuality {\r\n  low = 0,\r\n  medium = 1,\r\n  high = 2,\r\n}","/**\r\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\r\n * of compositing operation to apply when drawing new shapes.\r\n */\r\nexport enum GlobalCompositeOperationValue {\r\n  /**\r\n   * This is the default setting and draws new shapes on top of the existing canvas content\r\n   */\r\n  \"source-over\" = 0,\r\n  /**\r\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\r\n   * Everything else is made transparent.\r\n   */\r\n  \"source-in\" = 1,\r\n  /**\r\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\r\n   */\r\n  \"source-out\" = 2,\r\n  /**\r\n   * The new shape is only drawn where it overlaps the existing canvas content.\r\n   */\r\n  \"source-atop\" = 3,\r\n  /**\r\n   * New shapes are drawn behind the existing canvas content.\r\n   */\r\n  \"destination-over\" = 4,\r\n  /**\r\n   * The existing canvas content is kept where both the new shape and existing canvas content\r\n   * overlap. Everything else is made transparent.\r\n   */\r\n  \"destination-in\" = 5,\r\n  /**\r\n   * The existing content is kept where it doesn't overlap the new shape.\r\n   */\r\n  \"destination-out\" = 6,\r\n  /**\r\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\r\n   * behind the canvas content.\r\n   */\r\n  \"destination-atop\" = 7,\r\n  /**\r\n   * Where both shapes overlap the color is determined by adding color values.\r\n   */\r\n  \"lighter\" = 8,\r\n  /**\r\n   * Only the new shape is shown.\r\n   */\r\n  \"copy\" = 9,\r\n  /**\r\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\r\n   */\r\n  \"xor\" = 10,\r\n  /**\r\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\r\n   * layer. A darker picture is the result.\r\n   */\r\n  \"multiply\" = 11,\r\n  /**\r\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\r\n   * (opposite of multiply)\r\n   */\r\n  \"screen\" = 12,\r\n  /**\r\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\r\n   * parts become lighter.\r\n   */\r\n  \"overlay\" = 13,\r\n  /**\r\n   * Retains the darkest pixels of both layers.\r\n   */\r\n  \"darken\" = 14,\r\n  /**\r\n   * Retains the lightest pixels of both layers.\r\n   */\r\n  \"lighten\" = 15,\r\n  /**\r\n   * Divides the bottom layer by the inverted top layer.\r\n   */\r\n  \"color-dodge\" = 16,\r\n  /**\r\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\r\n   */\r\n  \"color-burn\" = 17,\r\n  /**\r\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\r\n   */\r\n  \"hard-light\" = 18,\r\n  /**\r\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\r\n   */\r\n  \"soft-light\" = 19,\r\n  /**\r\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\r\n   * value.\r\n   */\r\n  \"difference\" = 20,\r\n  /**\r\n   * Like difference, but with lower contrast.\r\n   */\r\n  \"exclusion\" = 21,\r\n  /**\r\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\r\n   */\r\n  \"hue\" = 22,\r\n  /**\r\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\r\n   */\r\n  \"saturation\" = 23,\r\n  /**\r\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\r\n   */\r\n  \"color\" = 24,\r\n  /**\r\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\r\n   */\r\n  \"luminosity\" = 25,\r\n}\r\n","/**\r\n * The CanvasRenderingContext2D.direction value of the Canvas 2D API specifies the current text\r\n * direction used to draw text onto the canvas.\r\n */\r\nexport enum CanvasDirection {\r\n  /**\r\n   * The text direction is left-to-right.\r\n   */\r\n  ltr = 0,\r\n  /**\r\n   * The text direction is right-to-left.\r\n   */\r\n  rtl = 1,\r\n  /**\r\n   * The text direction is inherited from the <canvas> element or the Document as appropriate. Default value.\r\n   */\r\n  inherit = 2,\r\n}\r\n","/**\r\n * The TextAlign enum specifies the current text alignment used when drawing text.\r\n *\r\n * The alignment is relative to the x value of the fillText() method. For example, if textAlign is\r\n * \"center\", then the text's left edge will be at x - (textWidth / 2).\r\n */\r\nexport enum TextAlign {\r\n  /**\r\n   * The text is left-aligned.\r\n   **/\r\n  left = 0,\r\n  /**\r\n   * The text is right-aligned.\r\n   **/\r\n  right = 1,\r\n  /**\r\n   * The text is centered.\r\n   **/\r\n  center = 2,\r\n  /**\r\n   * The text is aligned at the normal start of the line (left-aligned for left-to-right locales, right-aligned for right-to-left locales).\r\n   **/\r\n  start = 3,\r\n  /**\r\n   * The text is aligned at the normal end of the line (right-aligned for left-to-right locales, left-aligned for right-to-left locales).\r\n   **/\r\n  end = 4,\r\n}\r\n","/**\r\n * The TextBasline enum specifies the current text baseline used when drawing text.\r\n */\r\nexport enum TextBaseline {\r\n  /**\r\n   * The text baseline is the top of the em square.\r\n   **/\r\n  top = 0,\r\n  /**\r\n   * The text baseline is the hanging baseline. (Used by Tibetan and other Indic scripts.)\r\n   **/\r\n  hanging = 1,\r\n  /**\r\n   * The text baseline is the middle of the em square.\r\n   **/\r\n  middle = 2,\r\n  /**\r\n   * The text baseline is the normal alphabetic baseline. Default value.\r\n   **/\r\n  alphabetic = 3,\r\n  /**\r\n   * The text baseline is the ideographic baseline; this is the bottom of the body of the characters, if the main body of characters protrudes beneath the alphabetic baseline. (Used by Chinese, Japanese, and Korean scripts.)\r\n   **/\r\n  ideographic = 4,\r\n  /**\r\n   * The text baseline is the bottom of the bounding box. This differs from the ideographic baseline in that the ideographic baseline doesn't consider descenders.\r\n   **/\r\n  bottom = 5,\r\n}","export enum LineCap {\r\n  butt = 0,\r\n  round = 1,\r\n  square = 2,\r\n}\r\n","/**\r\n * The LineJoin enum responsible for setting the lineJoin property of the Canvas 2D API determines\r\n * the shape used to join two line segments where they meet.\r\n *\r\n * This property has no effect wherever two connected segments have the same direction, because no\r\n * joining area will be added in this case. Degenerate segments with a length of zero (i.e., with\r\n * all endpoints and control points at the exact same position) are also ignored.\r\n */\r\nexport enum LineJoin {\r\n  /**\r\n   * Rounds off the corners of a shape by filling an additional sector of disc centered at the\r\n   * common endpoint of connected segments. The radius for these rounded corners is equal to the\r\n   * line width.\r\n   */\r\n  bevel = 0,\r\n  /**\r\n   * Fills an additional triangular area between the common endpoint of connected segments, and the\r\n   * separate outside rectangular corners of each segment.\r\n   */\r\n  round = 1,\r\n  /**\r\n   * Connected segments are joined by extending their outside edges to connect at a single point,\r\n   * with the effect of filling an additional lozenge-shaped area. This setting is affected by the\r\n   * miterLimit property. Default value.\r\n   */\r\n  miter = 2,\r\n}","import { ASUtil, instantiateSync as instantiateBuffer, instantiate, instantiateStreaming } from \"assemblyscript/lib/loader\";\r\nimport { ICanvasSYS } from \"../util/ICanvasSYS\";\r\nimport { CanvasPatternRepetition } from \"../shared/CanvasPatternRepetition\";\r\nimport { CanvasInstruction } from \"../shared/CanvasInstruction\";\r\nimport { FillRule } from \"../shared/FillRule\";\r\nimport { ImageSmoothingQuality } from \"../shared/ImageSmoothingQuality\";\r\nimport { GlobalCompositeOperationValue } from \"../shared/GlobalCompositeOperationValue\";\r\nimport { CanvasDirection } from \"../shared/CanvasDirection\";\r\nimport { TextAlign } from \"../shared/TextAlign\";\r\nimport { TextBaseline } from \"../shared/TextBaseline\";\r\nimport { LineCap } from \"../shared/LineCap\";\r\nimport { LineJoin } from \"../shared/LineJoin\";\r\n\r\nconst bool = {\r\n  \"true\": 1,\r\n  \"false\": 0,\r\n};\r\n\r\nexport class AS2DGlue<T> {\r\n  public imports: any = null;\r\n  public wasm: (ASUtil & T & ICanvasSYS) | null = null;\r\n  private id: number = -1;\r\n\r\n  public instantiateBuffer(buffer: any, imports: any): ASUtil & T & ICanvasSYS {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = instantiateBuffer(buffer, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  public async instantiateStreaming(response: Promise<Response>, imports: any): Promise<ASUtil & T & ICanvasSYS> {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = await instantiateStreaming(response, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  public instantiate(module: any, imports: any): ASUtil & T & ICanvasSYS {\r\n    this.imports = imports;\r\n    this.hookImports();\r\n    this.wasm = instantiate(module, this.imports) as any;\r\n    this.hookWasmApi();\r\n    return this.wasm!;\r\n  }\r\n\r\n  private hookImports(): void {\r\n    this.imports.__canvas_sys = {\r\n      addColorStop: this.addColorStop.bind(this),\r\n      createLinearGradient: this.createLinearGradient.bind(this),\r\n      createPattern: this.createPattern.bind(this),\r\n      createRadialGradient: this.createRadialGradient.bind(this),\r\n      disposeCanvasGradient: this.disposeCanvasGradient.bind(this),\r\n      disposeCanvasPattern: this.disposeCanvasPattern.bind(this),\r\n      disposeImage: this.disposeImage.bind(this),\r\n      isPointInPath: this.isPointInPath.bind(this),\r\n      isPointInStroke: this.isPointInStroke.bind(this),\r\n      loadImage: this.loadImage.bind(this),\r\n      measureText: this.measureText.bind(this),\r\n      render: this.render.bind(this),\r\n    };\r\n  }\r\n\r\n  private hookWasmApi(): void {\r\n    this.wasm!.contexts = {};\r\n    this.wasm!.gradients = {};\r\n    this.wasm!.images = {};\r\n    this.wasm!.loading = {};\r\n    this.wasm!.patterns = {};\r\n    this.wasm!.useContext = this.useContext.bind(this);\r\n  }\r\n\r\n  private useContext(name: string, ctx: CanvasRenderingContext2D): number {\r\n    this.id += 1;\r\n    this.wasm!.contexts[this.id] = ctx;\r\n    this.wasm!.__use_context(this.wasm!.__allocString(name), this.id);\r\n    return this.id;\r\n  }\r\n\r\n  private createLinearGradient(objid: number, x0: number, y0: number, x1: number, y1: number): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\r\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createLinearGradient(x0, y0, x1, y1);\r\n    return this.id;\r\n  }\r\n\r\n  private createRadialGradient(objid: number, x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[objid]) throw new Error(\"Cannot find canvas: \" + objid);\r\n    this.wasm!.gradients[this.id] = this.wasm!.contexts[objid].createRadialGradient(x0, y0, r0, x1, y1, r1);\r\n    return this.id;\r\n  }\r\n\r\n  private addColorStop(objid: number, offset: number, color: number): void {\r\n    if (!this.wasm!.gradients[objid]) throw new Error(\"Cannot find gradient: \" + objid);\r\n    this.wasm!.gradients[objid].addColorStop(offset, this.wasm!.__getString(color));\r\n  }\r\n\r\n  private loadImage(imgPointer: number, srcPointer: number): number {\r\n    var src: string = this.wasm!.__getString(srcPointer);\r\n    this.id += 1;\r\n    var result: number = this.id;\r\n    this.wasm!.loading[result] = fetch(src)\r\n      .then(e => e.blob())\r\n      .then(createImageBitmap)\r\n      .then(e => {\r\n        this.wasm!.__image_loaded(imgPointer, e.width, e.height);\r\n        this.wasm!.images[result] = e;\r\n        return e;\r\n      });\r\n    return this.id;\r\n  }\r\n\r\n  private createPattern(cvsobjid: number, objid: number, repetition: CanvasPatternRepetition): number {\r\n    this.id += 1;\r\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    if (!this.wasm!.images[objid]) throw new Error(\"Cannot find image: \" + objid);\r\n    this.wasm!.patterns[this.id] = this.wasm!.contexts[cvsobjid].createPattern(\r\n      this.wasm!.images[objid],\r\n      CanvasPatternRepetition[repetition].replace(\"_\", \"-\"),\r\n    )!;\r\n    return this.id;\r\n  }\r\n\r\n  public measureText(cvsobjid: number, text: number): number {\r\n    // The canvas exists, because render was already called\r\n    // if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    var ctx: CanvasRenderingContext2D = this.wasm!.contexts[cvsobjid];\r\n    return ctx.measureText(this.wasm!.__getString(text)).width;\r\n  }\r\n\r\n  private render(cvsobjid: number, pointer: number): void {\r\n    if (!this.wasm!.contexts[cvsobjid]) throw new Error(\"Cannot find canvas: \" + cvsobjid);\r\n    var wasm: ASUtil & T & ICanvasSYS = this.wasm!;\r\n    var ctx: CanvasRenderingContext2D = wasm.contexts[cvsobjid];\r\n    var data = new Float64Array(wasm.memory.buffer, pointer, 0x10000);\r\n    var i = 0;\r\n    var strings: { [pointer: number]: string; } = {};\r\n    while (i < 0x10000 && data[i] !== CanvasInstruction.Commit) {\r\n      switch (data[i]) {\r\n        case CanvasInstruction.Arc: {\r\n          ctx.arc(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7] === 1);\r\n          break;\r\n        }\r\n        case CanvasInstruction.ArcTo: {\r\n          ctx.arcTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.BeginPath: {\r\n          ctx.beginPath();\r\n          break;\r\n        }\r\n        case CanvasInstruction.BezierCurveTo: {\r\n          ctx.bezierCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Clip: {\r\n          ctx.clip();\r\n          break;\r\n        }\r\n        case CanvasInstruction.ClosePath: {\r\n          ctx.closePath();\r\n          break;\r\n        }\r\n        case CanvasInstruction.ClearRect: {\r\n          ctx.clearRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Direction: {\r\n          ctx.direction = CanvasDirection[data[i + 2]] as \"rtl\" | \"ltr\" | \"inherit\";\r\n          break;\r\n        }\r\n        case CanvasInstruction.DrawImage: {\r\n          ctx.drawImage(wasm.images[data[i + 2]], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9], data[i + 10]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Ellipse: {\r\n          ctx.ellipse(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7], data[i + 8], data[i + 9] === 1);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Fill: {\r\n          ctx.fill(FillRule[data[i + 2]] as CanvasFillRule);\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillGradient: {\r\n          ctx.fillStyle = wasm.gradients[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillPattern: {\r\n          ctx.fillStyle = wasm.patterns[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillRect: {\r\n          ctx.fillRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillStyle: {\r\n          ctx.fillStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillText: {\r\n          ctx.fillText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.FillTextWidth: {\r\n          ctx.fillText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n            data[i + 5],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.Filter: {\r\n          ctx.filter = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.Font: {\r\n          ctx.font = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.GlobalAlpha: {\r\n          ctx.globalAlpha = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.GlobalCompositeOperation: {\r\n          ctx.globalCompositeOperation = GlobalCompositeOperationValue[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ImageSmoothingEnabled: {\r\n          ctx.imageSmoothingEnabled = data[i + 1] === 1;\r\n          break;\r\n        }\r\n        case CanvasInstruction.ImageSmoothingQuality: {\r\n          ctx.imageSmoothingQuality = ImageSmoothingQuality[data[i + 2]] as \"low\" | \"medium\" | \"high\";\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineCap: {\r\n          ctx.lineCap = LineCap[data[i + 2]] as CanvasLineCap;\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineDash: {\r\n          // @ts-ignore: Float64Array is not a valid TypedArrayConstructor, and setLineDash accepts Float64Array\r\n          ctx.setLineDash(wasm.__getArrayView(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineDashOffset: {\r\n          ctx.lineDashOffset = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineJoin: {\r\n          ctx.lineJoin = LineJoin[data[i + 2]] as CanvasLineJoin;\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineTo: {\r\n          ctx.lineTo(data[i + 2], data[i + 3]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.LineWidth: {\r\n          ctx.lineWidth = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.MiterLimit: {\r\n          ctx.miterLimit = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.MoveTo: {\r\n          ctx.moveTo(data[i + 2], data[i + 3]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.QuadraticCurveTo: {\r\n          ctx.quadraticCurveTo(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Rect: {\r\n          ctx.rect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.Restore: {\r\n          ctx.restore();\r\n          break;\r\n        }\r\n        case CanvasInstruction.Save: {\r\n          ctx.save();\r\n          break;\r\n        }\r\n        case CanvasInstruction.SetTransform: {\r\n          ctx.setTransform(data[i + 2], data[i + 3], data[i + 4], data[i + 5], data[i + 6], data[i + 7]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowBlur: {\r\n          ctx.shadowBlur = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowColor: {\r\n          ctx.shadowColor = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowOffsetX: {\r\n          ctx.shadowOffsetX = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.ShadowOffsetY: {\r\n          ctx.shadowOffsetY = data[i + 2];\r\n          break;\r\n        }\r\n        case CanvasInstruction.Stroke: {\r\n          ctx.stroke();\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeGradient: {\r\n          ctx.strokeStyle = wasm.gradients[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokePattern: {\r\n          ctx.strokeStyle = wasm.patterns[data[i + 2]];\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeRect: {\r\n          ctx.strokeRect(data[i + 2], data[i + 3], data[i + 4], data[i + 5]);\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeStyle: {\r\n          ctx.strokeStyle = strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2]));\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeText: {\r\n          ctx.strokeText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.StrokeTextWidth: {\r\n          ctx.strokeText(\r\n            strings[data[i + 2]] || (strings[data[i + 2]] = wasm.__getString(data[i + 2])),\r\n            data[i + 3],\r\n            data[i + 4],\r\n            data[i + 5],\r\n          );\r\n          break;\r\n        }\r\n        case CanvasInstruction.TextAlign: {\r\n          ctx.textAlign = TextAlign[data[i + 2]] as CanvasTextAlign;\r\n          break;\r\n        }\r\n        case CanvasInstruction.TextBaseline: {\r\n          ctx.textBaseline = TextBaseline[data[i + 2]] as CanvasTextBaseline;\r\n          break;\r\n        }\r\n      }\r\n      i = data[i + 1];\r\n    }\r\n  }\r\n\r\n  disposeCanvasPattern(id: number): void {\r\n    delete this.wasm!.patterns[id];\r\n  }\r\n\r\n  disposeImage(id: number): void {\r\n    delete this.wasm!.images[id];\r\n  }\r\n\r\n  disposeCanvasGradient(id: number): void {\r\n    delete this.wasm!.gradients[id];\r\n  }\r\n\r\n  isPointInPath(id: number, x: number, y: number, fillRule: FillRule): number {\r\n    return bool[(<any>this.wasm!.contexts[id]).isPointInPath(x, y, FillRule[fillRule]).toString() as \"true\" | \"false\"];\r\n  }\r\n\r\n  isPointInStroke(id: number, x: number, y: number): number {\r\n    return bool[(<any>this.wasm!.contexts[id]).isPointInStroke(x, y).toString() as \"true\" | \"false\"];\r\n  }\r\n}\r\n","/**\r\n * The GlobalCompositeOperation enum for the globalCompositeOperation property sets the type\r\n * of compositing operation to apply when drawing new shapes.\r\n */\r\nexport enum GlobalCompositeOperation {\r\n  /**\r\n   * This is the default setting and draws new shapes on top of the existing canvas content\r\n   */\r\n  source_over = 0,\r\n  /**\r\n   * The new shape is drawn only where both the new shape and the destination canvas overlap.\r\n   * Everything else is made transparent.\r\n   */\r\n  source_in = 1,\r\n  /**\r\n   * The new shape is drawn where it doesn't overlap the existing canvas content.\r\n   */\r\n  source_out = 2,\r\n  /**\r\n   * The new shape is only drawn where it overlaps the existing canvas content.\r\n   */\r\n  source_atop = 3,\r\n  /**\r\n   * New shapes are drawn behind the existing canvas content.\r\n   */\r\n  destination_over = 4,\r\n  /**\r\n   * The existing canvas content is kept where both the new shape and existing canvas content\r\n   * overlap. Everything else is made transparent.\r\n   */\r\n  destination_in = 5,\r\n  /**\r\n   * The existing content is kept where it doesn't overlap the new shape.\r\n   */\r\n  destination_out = 6,\r\n  /**\r\n   * The existing canvas is only kept where it overlaps the new shape. The new shape is drawn\r\n   * behind the canvas content.\r\n   */\r\n  destination_atop = 7,\r\n  /**\r\n   * Where both shapes overlap the color is determined by adding color values.\r\n   */\r\n  lighter = 8,\r\n  /**\r\n   * Only the new shape is shown.\r\n   */\r\n  copy = 9,\r\n  /**\r\n   * Shapes are made transparent where both overlap and drawn normal everywhere else.\r\n   */\r\n  xor = 10,\r\n  /**\r\n   * The pixels are of the top layer are multiplied with the corresponding pixel of the bottom\r\n   * layer. A darker picture is the result.\r\n   */\r\n  multiply = 11,\r\n  /**\r\n   * The pixels are inverted, multiplied, and inverted again. A lighter picture is the result\r\n   * (opposite of multiply)\r\n   */\r\n  screen = 12,\r\n  /**\r\n   * A combination of multiply and screen. Dark parts on the base layer become darker, and light\r\n   * parts become lighter.\r\n   */\r\n  overlay = 13,\r\n  /**\r\n   * Retains the darkest pixels of both layers.\r\n   */\r\n  darken = 14,\r\n  /**\r\n   * Retains the lightest pixels of both layers.\r\n   */\r\n  lighten = 15,\r\n  /**\r\n   * Divides the bottom layer by the inverted top layer.\r\n   */\r\n  color_dodge = 16,\r\n  /**\r\n   * Divides the inverted bottom layer by the top layer, and then inverts the result.\r\n   */\r\n  color_burn = 17,\r\n  /**\r\n   * A combination of multiply and screen like overlay, but with top and bottom layer swapped.\r\n   */\r\n  hard_light = 18,\r\n  /**\r\n   * A softer version of hard-light. Pure black or white does not result in pure black or white.\r\n   */\r\n  soft_light = 19,\r\n  /**\r\n   * Subtracts the bottom layer from the top layer or the other way round to always get a positive\r\n   * value.\r\n   */\r\n  difference = 20,\r\n  /**\r\n   * Like difference, but with lower contrast.\r\n   */\r\n  exclusion = 21,\r\n  /**\r\n   * Preserves the luma and chroma of the bottom layer, while adopting the hue of the top layer.\r\n   */\r\n  hue = 22,\r\n  /**\r\n   * Preserves the luma and hue of the bottom layer, while adopting the chroma of the top layer.\r\n   */\r\n  saturation = 23,\r\n  /**\r\n   * Preserves the luma of the bottom layer, while adopting the hue and chroma of the top layer.\r\n   */\r\n  color = 24,\r\n  /**\r\n   * Preserves the hue and chroma of the bottom layer, while adopting the luma of the top layer.\r\n   */\r\n  luminosity = 25,\r\n}\r\n","import { ASUtil } from \"assemblyscript/lib/loader\";\r\nimport { ICanvasSYS } from \"./util/ICanvasSYS\";\r\nimport { AS2DGlue } from \"./glue/AS2DGlue\";\r\n\r\nexport function instantiateBuffer<T>(buffer: Buffer, imports: any = {}): ICanvasSYS & ASUtil & T {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiateBuffer(buffer, imports);\r\n}\r\n\r\nexport function instantiate<T>(mod: any, imports: any = {}): ICanvasSYS & ASUtil & T {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiate(mod, imports);\r\n}\r\n\r\nexport function instantiateStreaming<T>(response: Promise<Response>, imports: any = {}): Promise<ICanvasSYS & ASUtil & T> {\r\n  var glue: AS2DGlue<T> = new AS2DGlue();\r\n  return glue.instantiateStreaming(response, imports);\r\n}\r\n\r\nexport * from \"./glue/AS2DGlue\";\r\n\r\nexport * from \"./shared/CanvasDirection\";\r\nexport * from \"./shared/CanvasInstruction\";\r\nexport * from \"./shared/CanvasPatternRepetition\";\r\nexport * from \"./shared/FillRule\";\r\nexport * from \"./shared/GlobalCompositeOperation\";\r\nexport * from \"./shared/GlobalCompositeOperationValue\";\r\nexport * from \"./shared/ImageSmoothingQuality\";\r\nexport * from \"./shared/LineCap\";\r\nexport * from \"./shared/LineJoin\";\r\nexport * from \"./shared/TextAlign\";\r\nexport * from \"./shared/TextBaseline\";\r\n\r\nexport * from \"./util/ICanvasSYS\";\r\n","import { instantiateStreaming, instantiateBuffer } from \"as2d\";\r\nconst fs = require(\"fs\");\r\nconst buffer = fs.readFileSync(\"./build/optimized.wasm\");\r\n\r\nasync function streaming(): Promise<void> {\r\n  const blob = new Blob([buffer], { type: \"application/wasm\" });\r\n  const url = URL.createObjectURL(blob);\r\n  // @ts-ignore\r\n  window.wasm = await instantiateStreaming<AS2DExample>(fetch(url), {});\r\n}\r\n\r\ninterface AS2DExample {\r\n  init(): void;\r\n  mouseMove(x: number, y: number): void;\r\n}\r\n\r\n// @ts-ignore\r\nif (typeof WebAssembly.instantiateStreaming === \"function\") {\r\n  streaming().then(postInstantiate);\r\n} else {\r\n  // @ts-ignore\r\n  window.wasm = instantiateBuffer<AS2DExample>(buffer, {});\r\n  postInstantiate();\r\n}\r\n\r\nfunction postInstantiate() {\r\n  // @ts-ignore\r\n  const wasm = window.wasm;\r\n  const canvas = document.querySelector(\"canvas\");\r\n  if (canvas) {\r\n    canvas.parentElement!.removeChild(canvas);\r\n  }\r\n\r\n  const ctx = document.createElement(\"canvas\")!.getContext(\"2d\")!;\r\n  ctx.canvas.width = 800;\r\n  ctx.canvas.height = 600;\r\n  ctx.canvas.style.border = \"solid 1px black\";\r\n  ctx.canvas.addEventListener(\"mousemove\", (e) => {\r\n    var rect: ClientRect = (e.target as HTMLCanvasElement).getBoundingClientRect();\r\n    wasm.mouseMove(e.clientX - rect.left, e.clientY - rect.top);\r\n  });\r\n\r\n  document.body.appendChild(ctx.canvas);\r\n  wasm.useContext(\"main\", ctx);\r\n  wasm.init();\r\n}\r\n\r\n","if (!window.frame) {\r\n  window.frame = function frame() {\r\n    requestAnimationFrame(frame);\r\n    if (window.wasm) {\r\n      window.wasm.update();\r\n    }\r\n  }\r\n  requestAnimationFrame(window.frame);\r\n}\r\n\r\nif (!window.Buffer) window.Buffer = require(\"buffer\").Buffer;\r\n\r\nrequire(\"./index.ts\");\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}